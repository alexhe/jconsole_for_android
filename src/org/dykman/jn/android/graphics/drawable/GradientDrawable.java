package org.dykman.jn.android.graphics.drawable;
public class GradientDrawable extends android.graphics.drawable.GradientDrawable{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public GradientDrawable(String jlocale,String jchildid,String joverride ){ super(); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", null ); }
public GradientDrawable(android.graphics.drawable.GradientDrawable.Orientation arg1,int[] arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setSize(int arg1,int arg2) { if (!testjnOverride( "setSize" )) { super.setSize( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setSize_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void inflate(android.content.res.Resources arg1,org.xmlpull.v1.XmlPullParser arg2,android.util.AttributeSet arg3) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException { if (!testjnOverride( "inflate" )) { super.inflate( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "inflate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean getPadding(android.graphics.Rect arg1) { if (!testjnOverride( "getPadding" )) return super.getPadding( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "getPadding_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setCornerRadii(float[] arg1) { if (!testjnOverride( "setCornerRadii" )) { super.setCornerRadii( arg1); return; } jInterface.Jnido( this, jchildidx + "setCornerRadii_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setCornerRadius(float arg1) { if (!testjnOverride( "setCornerRadius" )) { super.setCornerRadius( arg1); return; } jInterface.Jnido( this, jchildidx + "setCornerRadius_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setStroke(int arg1,int arg2) { if (!testjnOverride( "setStroke" )) { super.setStroke( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setStroke_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setStroke(int arg1,int arg2,float arg3,float arg4) { if (!testjnOverride( "setStroke" )) { super.setStroke( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "setStroke_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void setShape(int arg1) { if (!testjnOverride( "setShape" )) { super.setShape( arg1); return; } jInterface.Jnido( this, jchildidx + "setShape_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setGradientType(int arg1) { if (!testjnOverride( "setGradientType" )) { super.setGradientType( arg1); return; } jInterface.Jnido( this, jchildidx + "setGradientType_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setGradientCenter(float arg1,float arg2) { if (!testjnOverride( "setGradientCenter" )) { super.setGradientCenter( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setGradientCenter_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setGradientRadius(float arg1) { if (!testjnOverride( "setGradientRadius" )) { super.setGradientRadius( arg1); return; } jInterface.Jnido( this, jchildidx + "setGradientRadius_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setUseLevel(boolean arg1) { if (!testjnOverride( "setUseLevel" )) { super.setUseLevel( arg1); return; } jInterface.Jnido( this, jchildidx + "setUseLevel_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void draw(android.graphics.Canvas arg1) { if (!testjnOverride( "draw" )) { super.draw( arg1); return; } jInterface.Jnido( this, jchildidx + "draw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setColor(int arg1) { if (!testjnOverride( "setColor" )) { super.setColor( arg1); return; } jInterface.Jnido( this, jchildidx + "setColor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getChangingConfigurations(){ if (!testjnOverride( "getChangingConfigurations" )) return super.getChangingConfigurations(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getChangingConfigurations_" + jlocale + "_", null ); }
@Override public void setAlpha(int arg1) { if (!testjnOverride( "setAlpha" )) { super.setAlpha( arg1); return; } jInterface.Jnido( this, jchildidx + "setAlpha_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setDither(boolean arg1) { if (!testjnOverride( "setDither" )) { super.setDither( arg1); return; } jInterface.Jnido( this, jchildidx + "setDither_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setColorFilter(android.graphics.ColorFilter arg1) { if (!testjnOverride( "setColorFilter" )) { super.setColorFilter( arg1); return; } jInterface.Jnido( this, jchildidx + "setColorFilter_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getOpacity(){ if (!testjnOverride( "getOpacity" )) return super.getOpacity(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getOpacity_" + jlocale + "_", null ); }
@Override protected void onBoundsChange(android.graphics.Rect arg1) { if (!testjnOverride( "onBoundsChange" )) { super.onBoundsChange( arg1); return; } jInterface.Jnido( this, jchildidx + "onBoundsChange_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean onLevelChange(int arg1) { if (!testjnOverride( "onLevelChange" )) return super.onLevelChange( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onLevelChange_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getIntrinsicWidth(){ if (!testjnOverride( "getIntrinsicWidth" )) return super.getIntrinsicWidth(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getIntrinsicWidth_" + jlocale + "_", null ); }
@Override public int getIntrinsicHeight(){ if (!testjnOverride( "getIntrinsicHeight" )) return super.getIntrinsicHeight(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getIntrinsicHeight_" + jlocale + "_", null ); }
@Override public android.graphics.drawable.Drawable mutate(){ if (!testjnOverride( "mutate" )) return super.mutate(); return (android.graphics.drawable.Drawable) jInterface.Jnido( this, jchildidx + "mutate_" + jlocale + "_", null ); }
}
