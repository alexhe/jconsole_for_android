package org.dykman.jn.android.webkit;
public class WebView extends android.webkit.WebView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public WebView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public WebView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public WebView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void finalize() throws java.lang.Throwable{ if (!testjnOverride( "finalize" )) { super.finalize(); return; } jInterface.Jnido( this, jchildidx + "finalize_" + jlocale + "_", null ); }
@Override public void destroy(){ if (!testjnOverride( "destroy" )) { super.destroy(); return; } jInterface.Jnido( this, jchildidx + "destroy_" + jlocale + "_", null ); }
@Override public void freeMemory(){ if (!testjnOverride( "freeMemory" )) { super.freeMemory(); return; } jInterface.Jnido( this, jchildidx + "freeMemory_" + jlocale + "_", null ); }
@Override public android.net.http.SslCertificate getCertificate(){ if (!testjnOverride( "getCertificate" )) return super.getCertificate(); return (android.net.http.SslCertificate) jInterface.Jnido( this, jchildidx + "getCertificate_" + jlocale + "_", null ); }
@Override public void setScrollBarStyle(int arg1) { if (!testjnOverride( "setScrollBarStyle" )) { super.setScrollBarStyle( arg1); return; } jInterface.Jnido( this, jchildidx + "setScrollBarStyle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setHorizontalScrollbarOverlay(boolean arg1) { if (!testjnOverride( "setHorizontalScrollbarOverlay" )) { super.setHorizontalScrollbarOverlay( arg1); return; } jInterface.Jnido( this, jchildidx + "setHorizontalScrollbarOverlay_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setVerticalScrollbarOverlay(boolean arg1) { if (!testjnOverride( "setVerticalScrollbarOverlay" )) { super.setVerticalScrollbarOverlay( arg1); return; } jInterface.Jnido( this, jchildidx + "setVerticalScrollbarOverlay_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean overlayHorizontalScrollbar(){ if (!testjnOverride( "overlayHorizontalScrollbar" )) return super.overlayHorizontalScrollbar(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "overlayHorizontalScrollbar_" + jlocale + "_", null ); }
@Override public boolean overlayVerticalScrollbar(){ if (!testjnOverride( "overlayVerticalScrollbar" )) return super.overlayVerticalScrollbar(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "overlayVerticalScrollbar_" + jlocale + "_", null ); }
@Override public void setCertificate(android.net.http.SslCertificate arg1) { if (!testjnOverride( "setCertificate" )) { super.setCertificate( arg1); return; } jInterface.Jnido( this, jchildidx + "setCertificate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void savePassword(java.lang.String arg1,java.lang.String arg2,java.lang.String arg3) { if (!testjnOverride( "savePassword" )) { super.savePassword( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "savePassword_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setHttpAuthUsernamePassword(java.lang.String arg1,java.lang.String arg2,java.lang.String arg3,java.lang.String arg4) { if (!testjnOverride( "setHttpAuthUsernamePassword" )) { super.setHttpAuthUsernamePassword( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "setHttpAuthUsernamePassword_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public java.lang.String[] getHttpAuthUsernamePassword(java.lang.String arg1,java.lang.String arg2) { if (!testjnOverride( "getHttpAuthUsernamePassword" )) return super.getHttpAuthUsernamePassword( arg1, arg2); return (java.lang.String[]) jInterface.Jnidox( this, jchildidx + "getHttpAuthUsernamePassword_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setNetworkAvailable(boolean arg1) { if (!testjnOverride( "setNetworkAvailable" )) { super.setNetworkAvailable( arg1); return; } jInterface.Jnido( this, jchildidx + "setNetworkAvailable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.webkit.WebBackForwardList saveState(android.os.Bundle arg1) { if (!testjnOverride( "saveState" )) return super.saveState( arg1); return (android.webkit.WebBackForwardList) jInterface.Jnido( this, jchildidx + "saveState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean savePicture(android.os.Bundle arg1,java.io.File arg2) { if (!testjnOverride( "savePicture" )) return super.savePicture( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "savePicture_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean restorePicture(android.os.Bundle arg1,java.io.File arg2) { if (!testjnOverride( "restorePicture" )) return super.restorePicture( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "restorePicture_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.webkit.WebBackForwardList restoreState(android.os.Bundle arg1) { if (!testjnOverride( "restoreState" )) return super.restoreState( arg1); return (android.webkit.WebBackForwardList) jInterface.Jnido( this, jchildidx + "restoreState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void loadUrl(java.lang.String arg1) { if (!testjnOverride( "loadUrl" )) { super.loadUrl( arg1); return; } jInterface.Jnido( this, jchildidx + "loadUrl_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void postUrl(java.lang.String arg1,byte[] arg2) { if (!testjnOverride( "postUrl" )) { super.postUrl( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "postUrl_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void loadData(java.lang.String arg1,java.lang.String arg2,java.lang.String arg3) { if (!testjnOverride( "loadData" )) { super.loadData( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "loadData_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void loadDataWithBaseURL(java.lang.String arg1,java.lang.String arg2,java.lang.String arg3,java.lang.String arg4,java.lang.String arg5) { if (!testjnOverride( "loadDataWithBaseURL" )) { super.loadDataWithBaseURL( arg1, arg2, arg3, arg4, arg5); return; } jInterface.Jnido( this, jchildidx + "loadDataWithBaseURL_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override public void stopLoading(){ if (!testjnOverride( "stopLoading" )) { super.stopLoading(); return; } jInterface.Jnido( this, jchildidx + "stopLoading_" + jlocale + "_", null ); }
@Override public void reload(){ if (!testjnOverride( "reload" )) { super.reload(); return; } jInterface.Jnido( this, jchildidx + "reload_" + jlocale + "_", null ); }
@Override public boolean canGoBack(){ if (!testjnOverride( "canGoBack" )) return super.canGoBack(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "canGoBack_" + jlocale + "_", null ); }
@Override public void goBack(){ if (!testjnOverride( "goBack" )) { super.goBack(); return; } jInterface.Jnido( this, jchildidx + "goBack_" + jlocale + "_", null ); }
@Override public boolean canGoForward(){ if (!testjnOverride( "canGoForward" )) return super.canGoForward(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "canGoForward_" + jlocale + "_", null ); }
@Override public void goForward(){ if (!testjnOverride( "goForward" )) { super.goForward(); return; } jInterface.Jnido( this, jchildidx + "goForward_" + jlocale + "_", null ); }
@Override public boolean canGoBackOrForward(int arg1) { if (!testjnOverride( "canGoBackOrForward" )) return super.canGoBackOrForward( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "canGoBackOrForward_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void goBackOrForward(int arg1) { if (!testjnOverride( "goBackOrForward" )) { super.goBackOrForward( arg1); return; } jInterface.Jnido( this, jchildidx + "goBackOrForward_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean pageUp(boolean arg1) { if (!testjnOverride( "pageUp" )) return super.pageUp( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "pageUp_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean pageDown(boolean arg1) { if (!testjnOverride( "pageDown" )) return super.pageDown( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "pageDown_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void clearView(){ if (!testjnOverride( "clearView" )) { super.clearView(); return; } jInterface.Jnido( this, jchildidx + "clearView_" + jlocale + "_", null ); }
@Override public android.graphics.Picture capturePicture(){ if (!testjnOverride( "capturePicture" )) return super.capturePicture(); return (android.graphics.Picture) jInterface.Jnido( this, jchildidx + "capturePicture_" + jlocale + "_", null ); }
@Override public float getScale(){ if (!testjnOverride( "getScale" )) return super.getScale(); return (java.lang.Float) jInterface.Jnido( this, jchildidx + "getScale_" + jlocale + "_", null ); }
@Override public void setInitialScale(int arg1) { if (!testjnOverride( "setInitialScale" )) { super.setInitialScale( arg1); return; } jInterface.Jnido( this, jchildidx + "setInitialScale_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void invokeZoomPicker(){ if (!testjnOverride( "invokeZoomPicker" )) { super.invokeZoomPicker(); return; } jInterface.Jnido( this, jchildidx + "invokeZoomPicker_" + jlocale + "_", null ); }
@Override public void requestFocusNodeHref(android.os.Message arg1) { if (!testjnOverride( "requestFocusNodeHref" )) { super.requestFocusNodeHref( arg1); return; } jInterface.Jnido( this, jchildidx + "requestFocusNodeHref_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void requestImageRef(android.os.Message arg1) { if (!testjnOverride( "requestImageRef" )) { super.requestImageRef( arg1); return; } jInterface.Jnido( this, jchildidx + "requestImageRef_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected int computeHorizontalScrollRange(){ if (!testjnOverride( "computeHorizontalScrollRange" )) return super.computeHorizontalScrollRange(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeHorizontalScrollRange_" + jlocale + "_", null ); }
@Override protected int computeVerticalScrollRange(){ if (!testjnOverride( "computeVerticalScrollRange" )) return super.computeVerticalScrollRange(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollRange_" + jlocale + "_", null ); }
@Override protected int computeVerticalScrollOffset(){ if (!testjnOverride( "computeVerticalScrollOffset" )) return super.computeVerticalScrollOffset(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollOffset_" + jlocale + "_", null ); }
@Override protected int computeVerticalScrollExtent(){ if (!testjnOverride( "computeVerticalScrollExtent" )) return super.computeVerticalScrollExtent(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollExtent_" + jlocale + "_", null ); }
@Override public java.lang.String getUrl(){ if (!testjnOverride( "getUrl" )) return super.getUrl(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getUrl_" + jlocale + "_", null ); }
@Override public java.lang.String getOriginalUrl(){ if (!testjnOverride( "getOriginalUrl" )) return super.getOriginalUrl(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getOriginalUrl_" + jlocale + "_", null ); }
@Override public java.lang.String getTitle(){ if (!testjnOverride( "getTitle" )) return super.getTitle(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getTitle_" + jlocale + "_", null ); }
@Override public android.graphics.Bitmap getFavicon(){ if (!testjnOverride( "getFavicon" )) return super.getFavicon(); return (android.graphics.Bitmap) jInterface.Jnido( this, jchildidx + "getFavicon_" + jlocale + "_", null ); }
@Override public int getProgress(){ if (!testjnOverride( "getProgress" )) return super.getProgress(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getProgress_" + jlocale + "_", null ); }
@Override public int getContentHeight(){ if (!testjnOverride( "getContentHeight" )) return super.getContentHeight(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getContentHeight_" + jlocale + "_", null ); }
@Override public void pauseTimers(){ if (!testjnOverride( "pauseTimers" )) { super.pauseTimers(); return; } jInterface.Jnido( this, jchildidx + "pauseTimers_" + jlocale + "_", null ); }
@Override public void resumeTimers(){ if (!testjnOverride( "resumeTimers" )) { super.resumeTimers(); return; } jInterface.Jnido( this, jchildidx + "resumeTimers_" + jlocale + "_", null ); }
@Override public void clearCache(boolean arg1) { if (!testjnOverride( "clearCache" )) { super.clearCache( arg1); return; } jInterface.Jnido( this, jchildidx + "clearCache_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void clearFormData(){ if (!testjnOverride( "clearFormData" )) { super.clearFormData(); return; } jInterface.Jnido( this, jchildidx + "clearFormData_" + jlocale + "_", null ); }
@Override public void clearHistory(){ if (!testjnOverride( "clearHistory" )) { super.clearHistory(); return; } jInterface.Jnido( this, jchildidx + "clearHistory_" + jlocale + "_", null ); }
@Override public void clearSslPreferences(){ if (!testjnOverride( "clearSslPreferences" )) { super.clearSslPreferences(); return; } jInterface.Jnido( this, jchildidx + "clearSslPreferences_" + jlocale + "_", null ); }
@Override public android.webkit.WebBackForwardList copyBackForwardList(){ if (!testjnOverride( "copyBackForwardList" )) return super.copyBackForwardList(); return (android.webkit.WebBackForwardList) jInterface.Jnido( this, jchildidx + "copyBackForwardList_" + jlocale + "_", null ); }
@Override public void findNext(boolean arg1) { if (!testjnOverride( "findNext" )) { super.findNext( arg1); return; } jInterface.Jnido( this, jchildidx + "findNext_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int findAll(java.lang.String arg1) { if (!testjnOverride( "findAll" )) return super.findAll( arg1); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "findAll_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void clearMatches(){ if (!testjnOverride( "clearMatches" )) { super.clearMatches(); return; } jInterface.Jnido( this, jchildidx + "clearMatches_" + jlocale + "_", null ); }
@Override public void documentHasImages(android.os.Message arg1) { if (!testjnOverride( "documentHasImages" )) { super.documentHasImages( arg1); return; } jInterface.Jnido( this, jchildidx + "documentHasImages_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void computeScroll(){ if (!testjnOverride( "computeScroll" )) { super.computeScroll(); return; } jInterface.Jnido( this, jchildidx + "computeScroll_" + jlocale + "_", null ); }
@Override public void setWebViewClient(android.webkit.WebViewClient arg1) { if (!testjnOverride( "setWebViewClient" )) { super.setWebViewClient( arg1); return; } jInterface.Jnido( this, jchildidx + "setWebViewClient_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setDownloadListener(android.webkit.DownloadListener arg1) { if (!testjnOverride( "setDownloadListener" )) { super.setDownloadListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setDownloadListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setWebChromeClient(android.webkit.WebChromeClient arg1) { if (!testjnOverride( "setWebChromeClient" )) { super.setWebChromeClient( arg1); return; } jInterface.Jnido( this, jchildidx + "setWebChromeClient_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setPictureListener(android.webkit.WebView.PictureListener arg1) { if (!testjnOverride( "setPictureListener" )) { super.setPictureListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setPictureListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void addJavascriptInterface(java.lang.Object arg1,java.lang.String arg2) { if (!testjnOverride( "addJavascriptInterface" )) { super.addJavascriptInterface( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "addJavascriptInterface_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.webkit.WebSettings getSettings(){ if (!testjnOverride( "getSettings" )) return super.getSettings(); return (android.webkit.WebSettings) jInterface.Jnido( this, jchildidx + "getSettings_" + jlocale + "_", null ); }
@Override protected boolean drawChild(android.graphics.Canvas arg1,android.view.View arg2,long arg3) { if (!testjnOverride( "drawChild" )) return super.drawChild( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "drawChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "onDraw" )) { super.onDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "onDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setLayoutParams(android.view.ViewGroup.LayoutParams arg1) { if (!testjnOverride( "setLayoutParams" )) { super.setLayoutParams( arg1); return; } jInterface.Jnido( this, jchildidx + "setLayoutParams_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean performLongClick(){ if (!testjnOverride( "performLongClick" )) return super.performLongClick(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "performLongClick_" + jlocale + "_", null ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onAttachedToWindow(){ if (!testjnOverride( "onAttachedToWindow" )) { super.onAttachedToWindow(); return; } jInterface.Jnido( this, jchildidx + "onAttachedToWindow_" + jlocale + "_", null ); }
@Override protected void onDetachedFromWindow(){ if (!testjnOverride( "onDetachedFromWindow" )) { super.onDetachedFromWindow(); return; } jInterface.Jnido( this, jchildidx + "onDetachedFromWindow_" + jlocale + "_", null ); }
@Override public void onChildViewAdded(android.view.View arg1,android.view.View arg2) { if (!testjnOverride( "onChildViewAdded" )) { super.onChildViewAdded( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onChildViewAdded_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onChildViewRemoved(android.view.View arg1,android.view.View arg2) { if (!testjnOverride( "onChildViewRemoved" )) { super.onChildViewRemoved( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onChildViewRemoved_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onGlobalFocusChanged(android.view.View arg1,android.view.View arg2) { if (!testjnOverride( "onGlobalFocusChanged" )) { super.onGlobalFocusChanged( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onGlobalFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onWindowFocusChanged(boolean arg1) { if (!testjnOverride( "onWindowFocusChanged" )) { super.onWindowFocusChanged( arg1); return; } jInterface.Jnido( this, jchildidx + "onWindowFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onFocusChanged(boolean arg1,int arg2,android.graphics.Rect arg3) { if (!testjnOverride( "onFocusChanged" )) { super.onFocusChanged( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onSizeChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onSizeChanged" )) { super.onSizeChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onSizeChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override protected void onScrollChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onScrollChanged" )) { super.onScrollChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onScrollChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setMapTrackballToArrowKeys(boolean arg1) { if (!testjnOverride( "setMapTrackballToArrowKeys" )) { super.setMapTrackballToArrowKeys( arg1); return; } jInterface.Jnido( this, jchildidx + "setMapTrackballToArrowKeys_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTrackballEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTrackballEvent" )) return super.onTrackballEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTrackballEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void flingScroll(int arg1,int arg2) { if (!testjnOverride( "flingScroll" )) { super.flingScroll( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "flingScroll_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.view.View getZoomControls(){ if (!testjnOverride( "getZoomControls" )) return super.getZoomControls(); return (android.view.View) jInterface.Jnido( this, jchildidx + "getZoomControls_" + jlocale + "_", null ); }
@Override public boolean zoomIn(){ if (!testjnOverride( "zoomIn" )) return super.zoomIn(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "zoomIn_" + jlocale + "_", null ); }
@Override public boolean zoomOut(){ if (!testjnOverride( "zoomOut" )) return super.zoomOut(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "zoomOut_" + jlocale + "_", null ); }
@Override public boolean requestFocus(int arg1,android.graphics.Rect arg2) { if (!testjnOverride( "requestFocus" )) return super.requestFocus( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "requestFocus_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean requestChildRectangleOnScreen(android.view.View arg1,android.graphics.Rect arg2,boolean arg3) { if (!testjnOverride( "requestChildRectangleOnScreen" )) return super.requestChildRectangleOnScreen( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "requestChildRectangleOnScreen_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setBackgroundColor(int arg1) { if (!testjnOverride( "setBackgroundColor" )) { super.setBackgroundColor( arg1); return; } jInterface.Jnido( this, jchildidx + "setBackgroundColor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void debugDump(){ if (!testjnOverride( "debugDump" )) { super.debugDump(); return; } jInterface.Jnido( this, jchildidx + "debugDump_" + jlocale + "_", null ); }
}
