package org.dykman.jn.android.webkit;
public class WebViewClient extends android.webkit.WebViewClient{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public WebViewClient(String jlocale,String jchildid,String joverride ){ super(); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", null ); }
@Override public boolean shouldOverrideUrlLoading(android.webkit.WebView arg1,java.lang.String arg2) { if (!testjnOverride( "shouldOverrideUrlLoading" )) return super.shouldOverrideUrlLoading( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "shouldOverrideUrlLoading_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onPageStarted(android.webkit.WebView arg1,java.lang.String arg2,android.graphics.Bitmap arg3) { if (!testjnOverride( "onPageStarted" )) { super.onPageStarted( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onPageStarted_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void onPageFinished(android.webkit.WebView arg1,java.lang.String arg2) { if (!testjnOverride( "onPageFinished" )) { super.onPageFinished( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onPageFinished_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onLoadResource(android.webkit.WebView arg1,java.lang.String arg2) { if (!testjnOverride( "onLoadResource" )) { super.onLoadResource( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onLoadResource_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onTooManyRedirects(android.webkit.WebView arg1,android.os.Message arg2,android.os.Message arg3) { if (!testjnOverride( "onTooManyRedirects" )) { super.onTooManyRedirects( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onTooManyRedirects_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void onReceivedError(android.webkit.WebView arg1,int arg2,java.lang.String arg3,java.lang.String arg4) { if (!testjnOverride( "onReceivedError" )) { super.onReceivedError( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onReceivedError_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void onFormResubmission(android.webkit.WebView arg1,android.os.Message arg2,android.os.Message arg3) { if (!testjnOverride( "onFormResubmission" )) { super.onFormResubmission( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onFormResubmission_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void doUpdateVisitedHistory(android.webkit.WebView arg1,java.lang.String arg2,boolean arg3) { if (!testjnOverride( "doUpdateVisitedHistory" )) { super.doUpdateVisitedHistory( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "doUpdateVisitedHistory_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void onReceivedHttpAuthRequest(android.webkit.WebView arg1,android.webkit.HttpAuthHandler arg2,java.lang.String arg3,java.lang.String arg4) { if (!testjnOverride( "onReceivedHttpAuthRequest" )) { super.onReceivedHttpAuthRequest( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onReceivedHttpAuthRequest_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public boolean shouldOverrideKeyEvent(android.webkit.WebView arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "shouldOverrideKeyEvent" )) return super.shouldOverrideKeyEvent( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "shouldOverrideKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onUnhandledKeyEvent(android.webkit.WebView arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onUnhandledKeyEvent" )) { super.onUnhandledKeyEvent( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onUnhandledKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onScaleChanged(android.webkit.WebView arg1,float arg2,float arg3) { if (!testjnOverride( "onScaleChanged" )) { super.onScaleChanged( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onScaleChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
}
