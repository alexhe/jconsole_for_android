package org.dykman.jn.android.app;
public class Dialog extends android.app.Dialog{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public Dialog(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public Dialog(android.content.Context arg1,int arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
protected Dialog(android.content.Context arg1,boolean arg2,android.content.DialogInterface.OnCancelListener arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean isShowing(){ if (!testjnOverride( "isShowing" )) return super.isShowing(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isShowing_" + jlocale + "_", null ); }
@Override public void show(){ if (!testjnOverride( "show" )) { super.show(); return; } jInterface.Jnido( this, jchildidx + "show_" + jlocale + "_", null ); }
@Override public void hide(){ if (!testjnOverride( "hide" )) { super.hide(); return; } jInterface.Jnido( this, jchildidx + "hide_" + jlocale + "_", null ); }
@Override public void dismiss(){ if (!testjnOverride( "dismiss" )) { super.dismiss(); return; } jInterface.Jnido( this, jchildidx + "dismiss_" + jlocale + "_", null ); }
@Override protected void onCreate(android.os.Bundle arg1) { if (!testjnOverride( "onCreate" )) { super.onCreate( arg1); return; } jInterface.Jnido( this, jchildidx + "onCreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onStart(){ if (!testjnOverride( "onStart" )) { super.onStart(); return; } jInterface.Jnido( this, jchildidx + "onStart_" + jlocale + "_", null ); }
@Override protected void onStop(){ if (!testjnOverride( "onStop" )) { super.onStop(); return; } jInterface.Jnido( this, jchildidx + "onStop_" + jlocale + "_", null ); }
@Override public android.os.Bundle onSaveInstanceState(){ if (!testjnOverride( "onSaveInstanceState" )) return super.onSaveInstanceState(); return (android.os.Bundle) jInterface.Jnido( this, jchildidx + "onSaveInstanceState_" + jlocale + "_", null ); }
@Override public void onRestoreInstanceState(android.os.Bundle arg1) { if (!testjnOverride( "onRestoreInstanceState" )) { super.onRestoreInstanceState( arg1); return; } jInterface.Jnido( this, jchildidx + "onRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.Window getWindow(){ if (!testjnOverride( "getWindow" )) return super.getWindow(); return (android.view.Window) jInterface.Jnido( this, jchildidx + "getWindow_" + jlocale + "_", null ); }
@Override public android.view.View getCurrentFocus(){ if (!testjnOverride( "getCurrentFocus" )) return super.getCurrentFocus(); return (android.view.View) jInterface.Jnido( this, jchildidx + "getCurrentFocus_" + jlocale + "_", null ); }
@Override public android.view.View findViewById(int arg1) { if (!testjnOverride( "findViewById" )) return super.findViewById( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "findViewById_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setContentView(int arg1) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1); return; } jInterface.Jnido( this, jchildidx + "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setContentView(android.view.View arg1) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1); return; } jInterface.Jnido( this, jchildidx + "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setContentView(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void addContentView(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2) { if (!testjnOverride( "addContentView" )) { super.addContentView( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "addContentView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setTitle(java.lang.CharSequence arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, jchildidx + "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setTitle(int arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, jchildidx + "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyLongPress(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyLongPress" )) return super.onKeyLongPress( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyLongPress_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyMultiple(int arg1,int arg2,android.view.KeyEvent arg3) { if (!testjnOverride( "onKeyMultiple" )) return super.onKeyMultiple( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyMultiple_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void onBackPressed(){ if (!testjnOverride( "onBackPressed" )) { super.onBackPressed(); return; } jInterface.Jnido( this, jchildidx + "onBackPressed_" + jlocale + "_", null ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTrackballEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTrackballEvent" )) return super.onTrackballEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTrackballEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onWindowAttributesChanged(android.view.WindowManager.LayoutParams arg1) { if (!testjnOverride( "onWindowAttributesChanged" )) { super.onWindowAttributesChanged( arg1); return; } jInterface.Jnido( this, jchildidx + "onWindowAttributesChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onContentChanged(){ if (!testjnOverride( "onContentChanged" )) { super.onContentChanged(); return; } jInterface.Jnido( this, jchildidx + "onContentChanged_" + jlocale + "_", null ); }
@Override public void onWindowFocusChanged(boolean arg1) { if (!testjnOverride( "onWindowFocusChanged" )) { super.onWindowFocusChanged( arg1); return; } jInterface.Jnido( this, jchildidx + "onWindowFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onAttachedToWindow(){ if (!testjnOverride( "onAttachedToWindow" )) { super.onAttachedToWindow(); return; } jInterface.Jnido( this, jchildidx + "onAttachedToWindow_" + jlocale + "_", null ); }
@Override public void onDetachedFromWindow(){ if (!testjnOverride( "onDetachedFromWindow" )) { super.onDetachedFromWindow(); return; } jInterface.Jnido( this, jchildidx + "onDetachedFromWindow_" + jlocale + "_", null ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "dispatchTouchEvent" )) return super.dispatchTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchTrackballEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "dispatchTrackballEvent" )) return super.dispatchTrackballEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchTrackballEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent arg1) { if (!testjnOverride( "dispatchPopulateAccessibilityEvent" )) return super.dispatchPopulateAccessibilityEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchPopulateAccessibilityEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.View onCreatePanelView(int arg1) { if (!testjnOverride( "onCreatePanelView" )) return super.onCreatePanelView( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "onCreatePanelView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onCreatePanelMenu(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onCreatePanelMenu" )) return super.onCreatePanelMenu( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onCreatePanelMenu_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onPreparePanel(int arg1,android.view.View arg2,android.view.Menu arg3) { if (!testjnOverride( "onPreparePanel" )) return super.onPreparePanel( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onPreparePanel_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean onMenuOpened(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onMenuOpened" )) return super.onMenuOpened( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onMenuOpened_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onMenuItemSelected(int arg1,android.view.MenuItem arg2) { if (!testjnOverride( "onMenuItemSelected" )) return super.onMenuItemSelected( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onMenuItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onPanelClosed(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onPanelClosed" )) { super.onPanelClosed( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onPanelClosed_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onCreateOptionsMenu(android.view.Menu arg1) { if (!testjnOverride( "onCreateOptionsMenu" )) return super.onCreateOptionsMenu( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onCreateOptionsMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onPrepareOptionsMenu(android.view.Menu arg1) { if (!testjnOverride( "onPrepareOptionsMenu" )) return super.onPrepareOptionsMenu( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onPrepareOptionsMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onOptionsItemSelected(android.view.MenuItem arg1) { if (!testjnOverride( "onOptionsItemSelected" )) return super.onOptionsItemSelected( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onOptionsItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onOptionsMenuClosed(android.view.Menu arg1) { if (!testjnOverride( "onOptionsMenuClosed" )) { super.onOptionsMenuClosed( arg1); return; } jInterface.Jnido( this, jchildidx + "onOptionsMenuClosed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void openOptionsMenu(){ if (!testjnOverride( "openOptionsMenu" )) { super.openOptionsMenu(); return; } jInterface.Jnido( this, jchildidx + "openOptionsMenu_" + jlocale + "_", null ); }
@Override public void closeOptionsMenu(){ if (!testjnOverride( "closeOptionsMenu" )) { super.closeOptionsMenu(); return; } jInterface.Jnido( this, jchildidx + "closeOptionsMenu_" + jlocale + "_", null ); }
@Override public void onCreateContextMenu(android.view.ContextMenu arg1,android.view.View arg2,android.view.ContextMenu.ContextMenuInfo arg3) { if (!testjnOverride( "onCreateContextMenu" )) { super.onCreateContextMenu( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onCreateContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void registerForContextMenu(android.view.View arg1) { if (!testjnOverride( "registerForContextMenu" )) { super.registerForContextMenu( arg1); return; } jInterface.Jnido( this, jchildidx + "registerForContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void unregisterForContextMenu(android.view.View arg1) { if (!testjnOverride( "unregisterForContextMenu" )) { super.unregisterForContextMenu( arg1); return; } jInterface.Jnido( this, jchildidx + "unregisterForContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void openContextMenu(android.view.View arg1) { if (!testjnOverride( "openContextMenu" )) { super.openContextMenu( arg1); return; } jInterface.Jnido( this, jchildidx + "openContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onContextItemSelected(android.view.MenuItem arg1) { if (!testjnOverride( "onContextItemSelected" )) return super.onContextItemSelected( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onContextItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onContextMenuClosed(android.view.Menu arg1) { if (!testjnOverride( "onContextMenuClosed" )) { super.onContextMenuClosed( arg1); return; } jInterface.Jnido( this, jchildidx + "onContextMenuClosed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onSearchRequested(){ if (!testjnOverride( "onSearchRequested" )) return super.onSearchRequested(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onSearchRequested_" + jlocale + "_", null ); }
@Override public void takeKeyEvents(boolean arg1) { if (!testjnOverride( "takeKeyEvents" )) { super.takeKeyEvents( arg1); return; } jInterface.Jnido( this, jchildidx + "takeKeyEvents_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.LayoutInflater getLayoutInflater(){ if (!testjnOverride( "getLayoutInflater" )) return super.getLayoutInflater(); return (android.view.LayoutInflater) jInterface.Jnido( this, jchildidx + "getLayoutInflater_" + jlocale + "_", null ); }
@Override public void setCancelable(boolean arg1) { if (!testjnOverride( "setCancelable" )) { super.setCancelable( arg1); return; } jInterface.Jnido( this, jchildidx + "setCancelable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setCanceledOnTouchOutside(boolean arg1) { if (!testjnOverride( "setCanceledOnTouchOutside" )) { super.setCanceledOnTouchOutside( arg1); return; } jInterface.Jnido( this, jchildidx + "setCanceledOnTouchOutside_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void cancel(){ if (!testjnOverride( "cancel" )) { super.cancel(); return; } jInterface.Jnido( this, jchildidx + "cancel_" + jlocale + "_", null ); }
@Override public void setOnCancelListener(android.content.DialogInterface.OnCancelListener arg1) { if (!testjnOverride( "setOnCancelListener" )) { super.setOnCancelListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnCancelListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setCancelMessage(android.os.Message arg1) { if (!testjnOverride( "setCancelMessage" )) { super.setCancelMessage( arg1); return; } jInterface.Jnido( this, jchildidx + "setCancelMessage_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setOnDismissListener(android.content.DialogInterface.OnDismissListener arg1) { if (!testjnOverride( "setOnDismissListener" )) { super.setOnDismissListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnDismissListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setDismissMessage(android.os.Message arg1) { if (!testjnOverride( "setDismissMessage" )) { super.setDismissMessage( arg1); return; } jInterface.Jnido( this, jchildidx + "setDismissMessage_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setOnKeyListener(android.content.DialogInterface.OnKeyListener arg1) { if (!testjnOverride( "setOnKeyListener" )) { super.setOnKeyListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnKeyListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
