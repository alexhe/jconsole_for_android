package org.dykman.jn.android.app;
public class Activity extends android.app.Activity{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.util.ArrayList jnOverrideList = null;
public java.lang.String jargx = null;
public java.lang.String jargy = null;
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public Activity(){ super(); jnOverrideList = new java.util.ArrayList(); }
@Override public android.content.Intent getIntent(){ if (!testjnOverride( "getIntent" )) return super.getIntent(); return (android.content.Intent) jInterface.Jnido( this, "getIntent_" + jlocale + "_", null ); }
@Override public void setIntent(android.content.Intent arg1) { if (!testjnOverride( "setIntent" )) { super.setIntent( arg1); return; } jInterface.Jnido( this, "setIntent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.WindowManager getWindowManager(){ if (!testjnOverride( "getWindowManager" )) return super.getWindowManager(); return (android.view.WindowManager) jInterface.Jnido( this, "getWindowManager_" + jlocale + "_", null ); }
@Override public android.view.Window getWindow(){ if (!testjnOverride( "getWindow" )) return super.getWindow(); return (android.view.Window) jInterface.Jnido( this, "getWindow_" + jlocale + "_", null ); }
@Override public android.app.LoaderManager getLoaderManager(){ if (!testjnOverride( "getLoaderManager" )) return super.getLoaderManager(); return (android.app.LoaderManager) jInterface.Jnido( this, "getLoaderManager_" + jlocale + "_", null ); }
@Override public android.view.View getCurrentFocus(){ if (!testjnOverride( "getCurrentFocus" )) return super.getCurrentFocus(); return (android.view.View) jInterface.Jnido( this, "getCurrentFocus_" + jlocale + "_", null ); }
@Override protected void onCreate(android.os.Bundle arg1) { super.onCreate( arg1); jargx = getIntent().getStringExtra("jargx"); jargy = getIntent().getStringExtra("jargy"); jlocale = getIntent().getStringExtra("locale"); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; jInterface.Jnido( this, "onCreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onRestoreInstanceState(android.os.Bundle arg1) { if (!testjnOverride( "onRestoreInstanceState" )) { super.onRestoreInstanceState( arg1); return; } jInterface.Jnido( this, "onRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onPostCreate(android.os.Bundle arg1) { if (!testjnOverride( "onPostCreate" )) { super.onPostCreate( arg1); return; } super.onPostCreate( arg1); jInterface.Jnido( this, "onPostCreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onStart(){ if (!testjnOverride( "onStart" )) { super.onStart(); return; } super.onStart(); jInterface.Jnido( this, "onStart_" + jlocale + "_", null ); }
@Override protected void onRestart(){ if (!testjnOverride( "onRestart" )) { super.onRestart(); return; } jInterface.Jnido( this, "onRestart_" + jlocale + "_", null ); }
@Override protected void onResume(){ if (!testjnOverride( "onResume" )) { super.onResume(); return; } super.onResume(); jInterface.Jnido( this, "onResume_" + jlocale + "_", null ); }
@Override protected void onPostResume(){ if (!testjnOverride( "onPostResume" )) { super.onPostResume(); return; } super.onPostResume(); jInterface.Jnido( this, "onPostResume_" + jlocale + "_", null ); }
@Override protected void onNewIntent(android.content.Intent arg1) { if (!testjnOverride( "onNewIntent" )) { super.onNewIntent( arg1); return; } jInterface.Jnido( this, "onNewIntent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onSaveInstanceState(android.os.Bundle arg1) { if (!testjnOverride( "onSaveInstanceState" )) { super.onSaveInstanceState( arg1); return; } jInterface.Jnido( this, "onSaveInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onPause(){ if (!testjnOverride( "onPause" )) { super.onPause(); return; } super.onPause(); jInterface.Jnido( this, "onPause_" + jlocale + "_", null ); }
@Override protected void onUserLeaveHint(){ if (!testjnOverride( "onUserLeaveHint" )) { super.onUserLeaveHint(); return; } jInterface.Jnido( this, "onUserLeaveHint_" + jlocale + "_", null ); }
@Override public boolean onCreateThumbnail(android.graphics.Bitmap arg1,android.graphics.Canvas arg2) { if (!testjnOverride( "onCreateThumbnail" )) return super.onCreateThumbnail( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onCreateThumbnail_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public java.lang.CharSequence onCreateDescription(){ if (!testjnOverride( "onCreateDescription" )) return super.onCreateDescription(); return (java.lang.CharSequence) jInterface.Jnido( this, "onCreateDescription_" + jlocale + "_", null ); }
@Override protected void onStop(){ if (!testjnOverride( "onStop" )) { super.onStop(); return; } super.onStop(); jInterface.Jnido( this, "onStop_" + jlocale + "_", null ); }
@Override protected void onDestroy(){ if (!testjnOverride( "onDestroy" )) { super.onDestroy(); return; } super.onDestroy(); jInterface.Jnido( this, "onDestroy_" + jlocale + "_", null ); }
@Override public void onConfigurationChanged(android.content.res.Configuration arg1) { if (!testjnOverride( "onConfigurationChanged" )) { super.onConfigurationChanged( arg1); return; } jInterface.Jnido( this, "onConfigurationChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getChangingConfigurations(){ if (!testjnOverride( "getChangingConfigurations" )) return super.getChangingConfigurations(); return (java.lang.Integer) jInterface.Jnido( this, "getChangingConfigurations_" + jlocale + "_", null ); }
@Override public void onLowMemory(){ if (!testjnOverride( "onLowMemory" )) { super.onLowMemory(); return; } jInterface.Jnido( this, "onLowMemory_" + jlocale + "_", null ); }
@Override public void onTrimMemory(int arg1) { if (!testjnOverride( "onTrimMemory" )) { super.onTrimMemory( arg1); return; } jInterface.Jnido( this, "onTrimMemory_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.FragmentManager getFragmentManager(){ if (!testjnOverride( "getFragmentManager" )) return super.getFragmentManager(); return (android.app.FragmentManager) jInterface.Jnido( this, "getFragmentManager_" + jlocale + "_", null ); }
@Override public void onAttachFragment(android.app.Fragment arg1) { if (!testjnOverride( "onAttachFragment" )) { super.onAttachFragment( arg1); return; } jInterface.Jnido( this, "onAttachFragment_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.View findViewById(int arg1) { if (!testjnOverride( "findViewById" )) return super.findViewById( arg1); return (android.view.View) jInterface.Jnido( this, "findViewById_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.ActionBar getActionBar(){ if (!testjnOverride( "getActionBar" )) return super.getActionBar(); return (android.app.ActionBar) jInterface.Jnido( this, "getActionBar_" + jlocale + "_", null ); }
@Override public void setContentView(int arg1) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1); return; } jInterface.Jnido( this, "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setContentView(android.view.View arg1) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1); return; } jInterface.Jnido( this, "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setContentView(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2) { if (!testjnOverride( "setContentView" )) { super.setContentView( arg1, arg2); return; } jInterface.Jnido( this, "setContentView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void addContentView(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2) { if (!testjnOverride( "addContentView" )) { super.addContentView( arg1, arg2); return; } jInterface.Jnido( this, "addContentView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setFinishOnTouchOutside(boolean arg1) { if (!testjnOverride( "setFinishOnTouchOutside" )) { super.setFinishOnTouchOutside( arg1); return; } jInterface.Jnido( this, "setFinishOnTouchOutside_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void finish(){ if (!testjnOverride( "finish" )) { super.finish(); return; } jInterface.Jnido( this, "finish_" + jlocale + "_", null ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyLongPress(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyLongPress" )) return super.onKeyLongPress( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onKeyLongPress_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyMultiple(int arg1,int arg2,android.view.KeyEvent arg3) { if (!testjnOverride( "onKeyMultiple" )) return super.onKeyMultiple( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, "onKeyMultiple_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void onBackPressed(){ if (!testjnOverride( "onBackPressed" )) { super.onBackPressed(); return; } jInterface.Jnido( this, "onBackPressed_" + jlocale + "_", null ); }
@Override public boolean onKeyShortcut(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyShortcut" )) return super.onKeyShortcut( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onKeyShortcut_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTrackballEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTrackballEvent" )) return super.onTrackballEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onTrackballEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onGenericMotionEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onGenericMotionEvent" )) return super.onGenericMotionEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onGenericMotionEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onUserInteraction(){ if (!testjnOverride( "onUserInteraction" )) { super.onUserInteraction(); return; } jInterface.Jnido( this, "onUserInteraction_" + jlocale + "_", null ); }
@Override public void onWindowAttributesChanged(android.view.WindowManager.LayoutParams arg1) { if (!testjnOverride( "onWindowAttributesChanged" )) { super.onWindowAttributesChanged( arg1); return; } jInterface.Jnido( this, "onWindowAttributesChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onContentChanged(){ if (!testjnOverride( "onContentChanged" )) { super.onContentChanged(); return; } jInterface.Jnido( this, "onContentChanged_" + jlocale + "_", null ); }
@Override public void onWindowFocusChanged(boolean arg1) { if (!testjnOverride( "onWindowFocusChanged" )) { super.onWindowFocusChanged( arg1); return; } jInterface.Jnido( this, "onWindowFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onAttachedToWindow(){ if (!testjnOverride( "onAttachedToWindow" )) { super.onAttachedToWindow(); return; } jInterface.Jnido( this, "onAttachedToWindow_" + jlocale + "_", null ); }
@Override public void onDetachedFromWindow(){ if (!testjnOverride( "onDetachedFromWindow" )) { super.onDetachedFromWindow(); return; } jInterface.Jnido( this, "onDetachedFromWindow_" + jlocale + "_", null ); }
@Override public boolean hasWindowFocus(){ if (!testjnOverride( "hasWindowFocus" )) return super.hasWindowFocus(); return (java.lang.Boolean) jInterface.Jnido( this, "hasWindowFocus_" + jlocale + "_", null ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchKeyShortcutEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyShortcutEvent" )) return super.dispatchKeyShortcutEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchKeyShortcutEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "dispatchTouchEvent" )) return super.dispatchTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchTrackballEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "dispatchTrackballEvent" )) return super.dispatchTrackballEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchTrackballEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchGenericMotionEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "dispatchGenericMotionEvent" )) return super.dispatchGenericMotionEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchGenericMotionEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent arg1) { if (!testjnOverride( "dispatchPopulateAccessibilityEvent" )) return super.dispatchPopulateAccessibilityEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "dispatchPopulateAccessibilityEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.View onCreatePanelView(int arg1) { if (!testjnOverride( "onCreatePanelView" )) return super.onCreatePanelView( arg1); return (android.view.View) jInterface.Jnido( this, "onCreatePanelView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onCreatePanelMenu(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onCreatePanelMenu" )) return super.onCreatePanelMenu( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onCreatePanelMenu_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onPreparePanel(int arg1,android.view.View arg2,android.view.Menu arg3) { if (!testjnOverride( "onPreparePanel" )) return super.onPreparePanel( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, "onPreparePanel_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean onMenuOpened(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onMenuOpened" )) return super.onMenuOpened( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onMenuOpened_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onMenuItemSelected(int arg1,android.view.MenuItem arg2) { if (!testjnOverride( "onMenuItemSelected" )) return super.onMenuItemSelected( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "onMenuItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onPanelClosed(int arg1,android.view.Menu arg2) { if (!testjnOverride( "onPanelClosed" )) { super.onPanelClosed( arg1, arg2); return; } jInterface.Jnido( this, "onPanelClosed_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void invalidateOptionsMenu(){ if (!testjnOverride( "invalidateOptionsMenu" )) { super.invalidateOptionsMenu(); return; } jInterface.Jnido( this, "invalidateOptionsMenu_" + jlocale + "_", null ); }
@Override public boolean onCreateOptionsMenu(android.view.Menu arg1) { if (!testjnOverride( "onCreateOptionsMenu" )) return super.onCreateOptionsMenu( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onCreateOptionsMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onPrepareOptionsMenu(android.view.Menu arg1) { if (!testjnOverride( "onPrepareOptionsMenu" )) return super.onPrepareOptionsMenu( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onPrepareOptionsMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onOptionsItemSelected(android.view.MenuItem arg1) { if (!testjnOverride( "onOptionsItemSelected" )) return super.onOptionsItemSelected( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onOptionsItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onNavigateUp(){ if (!testjnOverride( "onNavigateUp" )) return super.onNavigateUp(); return (java.lang.Boolean) jInterface.Jnido( this, "onNavigateUp_" + jlocale + "_", null ); }
@Override public boolean onNavigateUpFromChild(android.app.Activity arg1) { if (!testjnOverride( "onNavigateUpFromChild" )) return super.onNavigateUpFromChild( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onNavigateUpFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder arg1) { if (!testjnOverride( "onCreateNavigateUpTaskStack" )) { super.onCreateNavigateUpTaskStack( arg1); return; } jInterface.Jnido( this, "onCreateNavigateUpTaskStack_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder arg1) { if (!testjnOverride( "onPrepareNavigateUpTaskStack" )) { super.onPrepareNavigateUpTaskStack( arg1); return; } jInterface.Jnido( this, "onPrepareNavigateUpTaskStack_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onOptionsMenuClosed(android.view.Menu arg1) { if (!testjnOverride( "onOptionsMenuClosed" )) { super.onOptionsMenuClosed( arg1); return; } jInterface.Jnido( this, "onOptionsMenuClosed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void openOptionsMenu(){ if (!testjnOverride( "openOptionsMenu" )) { super.openOptionsMenu(); return; } jInterface.Jnido( this, "openOptionsMenu_" + jlocale + "_", null ); }
@Override public void closeOptionsMenu(){ if (!testjnOverride( "closeOptionsMenu" )) { super.closeOptionsMenu(); return; } jInterface.Jnido( this, "closeOptionsMenu_" + jlocale + "_", null ); }
@Override public void onCreateContextMenu(android.view.ContextMenu arg1,android.view.View arg2,android.view.ContextMenu.ContextMenuInfo arg3) { if (!testjnOverride( "onCreateContextMenu" )) { super.onCreateContextMenu( arg1, arg2, arg3); return; } jInterface.Jnido( this, "onCreateContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void registerForContextMenu(android.view.View arg1) { if (!testjnOverride( "registerForContextMenu" )) { super.registerForContextMenu( arg1); return; } jInterface.Jnido( this, "registerForContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void unregisterForContextMenu(android.view.View arg1) { if (!testjnOverride( "unregisterForContextMenu" )) { super.unregisterForContextMenu( arg1); return; } jInterface.Jnido( this, "unregisterForContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void openContextMenu(android.view.View arg1) { if (!testjnOverride( "openContextMenu" )) { super.openContextMenu( arg1); return; } jInterface.Jnido( this, "openContextMenu_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void closeContextMenu(){ if (!testjnOverride( "closeContextMenu" )) { super.closeContextMenu(); return; } jInterface.Jnido( this, "closeContextMenu_" + jlocale + "_", null ); }
@Override public boolean onContextItemSelected(android.view.MenuItem arg1) { if (!testjnOverride( "onContextItemSelected" )) return super.onContextItemSelected( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "onContextItemSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onContextMenuClosed(android.view.Menu arg1) { if (!testjnOverride( "onContextMenuClosed" )) { super.onContextMenuClosed( arg1); return; } jInterface.Jnido( this, "onContextMenuClosed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onSearchRequested(){ if (!testjnOverride( "onSearchRequested" )) return super.onSearchRequested(); return (java.lang.Boolean) jInterface.Jnido( this, "onSearchRequested_" + jlocale + "_", null ); }
@Override public void startSearch(java.lang.String arg1,boolean arg2,android.os.Bundle arg3,boolean arg4) { if (!testjnOverride( "startSearch" )) { super.startSearch( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, "startSearch_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void triggerSearch(java.lang.String arg1,android.os.Bundle arg2) { if (!testjnOverride( "triggerSearch" )) { super.triggerSearch( arg1, arg2); return; } jInterface.Jnido( this, "triggerSearch_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void takeKeyEvents(boolean arg1) { if (!testjnOverride( "takeKeyEvents" )) { super.takeKeyEvents( arg1); return; } jInterface.Jnido( this, "takeKeyEvents_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.LayoutInflater getLayoutInflater(){ if (!testjnOverride( "getLayoutInflater" )) return super.getLayoutInflater(); return (android.view.LayoutInflater) jInterface.Jnido( this, "getLayoutInflater_" + jlocale + "_", null ); }
@Override public android.view.MenuInflater getMenuInflater(){ if (!testjnOverride( "getMenuInflater" )) return super.getMenuInflater(); return (android.view.MenuInflater) jInterface.Jnido( this, "getMenuInflater_" + jlocale + "_", null ); }
@Override protected void onApplyThemeResource(android.content.res.Resources.Theme arg1,int arg2,boolean arg3) { if (!testjnOverride( "onApplyThemeResource" )) { super.onApplyThemeResource( arg1, arg2, arg3); return; } jInterface.Jnido( this, "onApplyThemeResource_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void startActivityForResult(android.content.Intent arg1,int arg2) { if (!testjnOverride( "startActivityForResult" )) { super.startActivityForResult( arg1, arg2); return; } jInterface.Jnido( this, "startActivityForResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void startActivityForResult(android.content.Intent arg1,int arg2,android.os.Bundle arg3) { if (!testjnOverride( "startActivityForResult" )) { super.startActivityForResult( arg1, arg2, arg3); return; } jInterface.Jnido( this, "startActivityForResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void startIntentSenderForResult(android.content.IntentSender arg1,int arg2,android.content.Intent arg3,int arg4,int arg5,int arg6) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSenderForResult" )) { super.startIntentSenderForResult( arg1, arg2, arg3, arg4, arg5, arg6); return; } jInterface.Jnido( this, "startIntentSenderForResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6 } ); }
@Override public void startIntentSenderForResult(android.content.IntentSender arg1,int arg2,android.content.Intent arg3,int arg4,int arg5,int arg6,android.os.Bundle arg7) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSenderForResult" )) { super.startIntentSenderForResult( arg1, arg2, arg3, arg4, arg5, arg6, arg7); return; } jInterface.Jnido( this, "startIntentSenderForResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7 } ); }
@Override public void startActivity(android.content.Intent arg1) { if (!testjnOverride( "startActivity" )) { super.startActivity( arg1); return; } jInterface.Jnido( this, "startActivity_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void startActivity(android.content.Intent arg1,android.os.Bundle arg2) { if (!testjnOverride( "startActivity" )) { super.startActivity( arg1, arg2); return; } jInterface.Jnido( this, "startActivity_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void startActivities(android.content.Intent[] arg1) { if (!testjnOverride( "startActivities" )) { super.startActivities( arg1); return; } jInterface.Jnido( this, "startActivities_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void startActivities(android.content.Intent[] arg1,android.os.Bundle arg2) { if (!testjnOverride( "startActivities" )) { super.startActivities( arg1, arg2); return; } jInterface.Jnido( this, "startActivities_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void startIntentSender(android.content.IntentSender arg1,android.content.Intent arg2,int arg3,int arg4,int arg5) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSender" )) { super.startIntentSender( arg1, arg2, arg3, arg4, arg5); return; } jInterface.Jnido( this, "startIntentSender_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override public void startIntentSender(android.content.IntentSender arg1,android.content.Intent arg2,int arg3,int arg4,int arg5,android.os.Bundle arg6) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSender" )) { super.startIntentSender( arg1, arg2, arg3, arg4, arg5, arg6); return; } jInterface.Jnido( this, "startIntentSender_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6 } ); }
@Override public boolean startActivityIfNeeded(android.content.Intent arg1,int arg2) { if (!testjnOverride( "startActivityIfNeeded" )) return super.startActivityIfNeeded( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "startActivityIfNeeded_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean startActivityIfNeeded(android.content.Intent arg1,int arg2,android.os.Bundle arg3) { if (!testjnOverride( "startActivityIfNeeded" )) return super.startActivityIfNeeded( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, "startActivityIfNeeded_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean startNextMatchingActivity(android.content.Intent arg1) { if (!testjnOverride( "startNextMatchingActivity" )) return super.startNextMatchingActivity( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "startNextMatchingActivity_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean startNextMatchingActivity(android.content.Intent arg1,android.os.Bundle arg2) { if (!testjnOverride( "startNextMatchingActivity" )) return super.startNextMatchingActivity( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "startNextMatchingActivity_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void startActivityFromChild(android.app.Activity arg1,android.content.Intent arg2,int arg3) { if (!testjnOverride( "startActivityFromChild" )) { super.startActivityFromChild( arg1, arg2, arg3); return; } jInterface.Jnido( this, "startActivityFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void startActivityFromChild(android.app.Activity arg1,android.content.Intent arg2,int arg3,android.os.Bundle arg4) { if (!testjnOverride( "startActivityFromChild" )) { super.startActivityFromChild( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, "startActivityFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void startActivityFromFragment(android.app.Fragment arg1,android.content.Intent arg2,int arg3) { if (!testjnOverride( "startActivityFromFragment" )) { super.startActivityFromFragment( arg1, arg2, arg3); return; } jInterface.Jnido( this, "startActivityFromFragment_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void startActivityFromFragment(android.app.Fragment arg1,android.content.Intent arg2,int arg3,android.os.Bundle arg4) { if (!testjnOverride( "startActivityFromFragment" )) { super.startActivityFromFragment( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, "startActivityFromFragment_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void startIntentSenderFromChild(android.app.Activity arg1,android.content.IntentSender arg2,int arg3,android.content.Intent arg4,int arg5,int arg6,int arg7) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSenderFromChild" )) { super.startIntentSenderFromChild( arg1, arg2, arg3, arg4, arg5, arg6, arg7); return; } jInterface.Jnido( this, "startIntentSenderFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7 } ); }
@Override public void startIntentSenderFromChild(android.app.Activity arg1,android.content.IntentSender arg2,int arg3,android.content.Intent arg4,int arg5,int arg6,int arg7,android.os.Bundle arg8) throws android.content.IntentSender.SendIntentException { if (!testjnOverride( "startIntentSenderFromChild" )) { super.startIntentSenderFromChild( arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); return; } jInterface.Jnido( this, "startIntentSenderFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8 } ); }
@Override public void overridePendingTransition(int arg1,int arg2) { if (!testjnOverride( "overridePendingTransition" )) { super.overridePendingTransition( arg1, arg2); return; } jInterface.Jnido( this, "overridePendingTransition_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public java.lang.String getCallingPackage(){ if (!testjnOverride( "getCallingPackage" )) return super.getCallingPackage(); return (java.lang.String) jInterface.Jnido( this, "getCallingPackage_" + jlocale + "_", null ); }
@Override public android.content.ComponentName getCallingActivity(){ if (!testjnOverride( "getCallingActivity" )) return super.getCallingActivity(); return (android.content.ComponentName) jInterface.Jnido( this, "getCallingActivity_" + jlocale + "_", null ); }
@Override public void setVisible(boolean arg1) { if (!testjnOverride( "setVisible" )) { super.setVisible( arg1); return; } jInterface.Jnido( this, "setVisible_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isFinishing(){ if (!testjnOverride( "isFinishing" )) return super.isFinishing(); return (java.lang.Boolean) jInterface.Jnido( this, "isFinishing_" + jlocale + "_", null ); }
@Override public boolean isChangingConfigurations(){ if (!testjnOverride( "isChangingConfigurations" )) return super.isChangingConfigurations(); return (java.lang.Boolean) jInterface.Jnido( this, "isChangingConfigurations_" + jlocale + "_", null ); }
@Override public void recreate(){ if (!testjnOverride( "recreate" )) { super.recreate(); return; } jInterface.Jnido( this, "recreate_" + jlocale + "_", null ); }
@Override public void finishAffinity(){ if (!testjnOverride( "finishAffinity" )) { super.finishAffinity(); return; } jInterface.Jnido( this, "finishAffinity_" + jlocale + "_", null ); }
@Override public void finishFromChild(android.app.Activity arg1) { if (!testjnOverride( "finishFromChild" )) { super.finishFromChild( arg1); return; } jInterface.Jnido( this, "finishFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void finishActivity(int arg1) { if (!testjnOverride( "finishActivity" )) { super.finishActivity( arg1); return; } jInterface.Jnido( this, "finishActivity_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void finishActivityFromChild(android.app.Activity arg1,int arg2) { if (!testjnOverride( "finishActivityFromChild" )) { super.finishActivityFromChild( arg1, arg2); return; } jInterface.Jnido( this, "finishActivityFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onActivityResult(int arg1,int arg2,android.content.Intent arg3) { if (!testjnOverride( "onActivityResult" )) { super.onActivityResult( arg1, arg2, arg3); return; } jInterface.Jnido( this, "onActivityResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public android.app.PendingIntent createPendingResult(int arg1,android.content.Intent arg2,int arg3) { if (!testjnOverride( "createPendingResult" )) return super.createPendingResult( arg1, arg2, arg3); return (android.app.PendingIntent) jInterface.Jnido( this, "createPendingResult_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setRequestedOrientation(int arg1) { if (!testjnOverride( "setRequestedOrientation" )) { super.setRequestedOrientation( arg1); return; } jInterface.Jnido( this, "setRequestedOrientation_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getRequestedOrientation(){ if (!testjnOverride( "getRequestedOrientation" )) return super.getRequestedOrientation(); return (java.lang.Integer) jInterface.Jnido( this, "getRequestedOrientation_" + jlocale + "_", null ); }
@Override public int getTaskId(){ if (!testjnOverride( "getTaskId" )) return super.getTaskId(); return (java.lang.Integer) jInterface.Jnido( this, "getTaskId_" + jlocale + "_", null ); }
@Override public boolean isTaskRoot(){ if (!testjnOverride( "isTaskRoot" )) return super.isTaskRoot(); return (java.lang.Boolean) jInterface.Jnido( this, "isTaskRoot_" + jlocale + "_", null ); }
@Override public boolean moveTaskToBack(boolean arg1) { if (!testjnOverride( "moveTaskToBack" )) return super.moveTaskToBack( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "moveTaskToBack_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.String getLocalClassName(){ if (!testjnOverride( "getLocalClassName" )) return super.getLocalClassName(); return (java.lang.String) jInterface.Jnido( this, "getLocalClassName_" + jlocale + "_", null ); }
@Override public android.content.ComponentName getComponentName(){ if (!testjnOverride( "getComponentName" )) return super.getComponentName(); return (android.content.ComponentName) jInterface.Jnido( this, "getComponentName_" + jlocale + "_", null ); }
@Override public android.content.SharedPreferences getPreferences(int arg1) { if (!testjnOverride( "getPreferences" )) return super.getPreferences( arg1); return (android.content.SharedPreferences) jInterface.Jnido( this, "getPreferences_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.Object getSystemService(java.lang.String arg1) { if (!testjnOverride( "getSystemService" )) return super.getSystemService( arg1); return (java.lang.Object) jInterface.Jnido( this, "getSystemService_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setTitle(java.lang.CharSequence arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setTitle(int arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setTitleColor(int arg1) { if (!testjnOverride( "setTitleColor" )) { super.setTitleColor( arg1); return; } jInterface.Jnido( this, "setTitleColor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onTitleChanged(java.lang.CharSequence arg1,int arg2) { if (!testjnOverride( "onTitleChanged" )) { super.onTitleChanged( arg1, arg2); return; } jInterface.Jnido( this, "onTitleChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onChildTitleChanged(android.app.Activity arg1,java.lang.CharSequence arg2) { if (!testjnOverride( "onChildTitleChanged" )) { super.onChildTitleChanged( arg1, arg2); return; } jInterface.Jnido( this, "onChildTitleChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.view.View onCreateView(java.lang.String arg1,android.content.Context arg2,android.util.AttributeSet arg3) { if (!testjnOverride( "onCreateView" )) return super.onCreateView( arg1, arg2, arg3); return (android.view.View) jInterface.Jnido( this, "onCreateView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public android.view.View onCreateView(android.view.View arg1,java.lang.String arg2,android.content.Context arg3,android.util.AttributeSet arg4) { if (!testjnOverride( "onCreateView" )) return super.onCreateView( arg1, arg2, arg3, arg4); return (android.view.View) jInterface.Jnido( this, "onCreateView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void dump(java.lang.String arg1,java.io.FileDescriptor arg2,java.io.PrintWriter arg3,java.lang.String[] arg4) { if (!testjnOverride( "dump" )) { super.dump( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, "dump_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public android.view.ActionMode startActionMode(android.view.ActionMode.Callback arg1) { if (!testjnOverride( "startActionMode" )) return super.startActionMode( arg1); return (android.view.ActionMode) jInterface.Jnido( this, "startActionMode_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback arg1) { if (!testjnOverride( "onWindowStartingActionMode" )) return super.onWindowStartingActionMode( arg1); return (android.view.ActionMode) jInterface.Jnido( this, "onWindowStartingActionMode_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onActionModeStarted(android.view.ActionMode arg1) { if (!testjnOverride( "onActionModeStarted" )) { super.onActionModeStarted( arg1); return; } jInterface.Jnido( this, "onActionModeStarted_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onActionModeFinished(android.view.ActionMode arg1) { if (!testjnOverride( "onActionModeFinished" )) { super.onActionModeFinished( arg1); return; } jInterface.Jnido( this, "onActionModeFinished_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean shouldUpRecreateTask(android.content.Intent arg1) { if (!testjnOverride( "shouldUpRecreateTask" )) return super.shouldUpRecreateTask( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "shouldUpRecreateTask_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean navigateUpTo(android.content.Intent arg1) { if (!testjnOverride( "navigateUpTo" )) return super.navigateUpTo( arg1); return (java.lang.Boolean) jInterface.Jnido( this, "navigateUpTo_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean navigateUpToFromChild(android.app.Activity arg1,android.content.Intent arg2) { if (!testjnOverride( "navigateUpToFromChild" )) return super.navigateUpToFromChild( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, "navigateUpToFromChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.content.Intent getParentActivityIntent(){ if (!testjnOverride( "getParentActivityIntent" )) return super.getParentActivityIntent(); return (android.content.Intent) jInterface.Jnido( this, "getParentActivityIntent_" + jlocale + "_", null ); }
}
