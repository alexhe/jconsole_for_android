package org.dykman.jn.android.app;
public class Instrumentation extends android.app.Instrumentation{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public Instrumentation(String jlocale,String jchildid,String joverride ){ super(); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", null ); }
@Override public android.content.Context getContext(){ if (!testjnOverride( "getContext" )) return super.getContext(); return (android.content.Context) jInterface.Jnido( this, jchildidx + "getContext_" + jlocale + "_", null ); }
@Override public void start(){ if (!testjnOverride( "start" )) { super.start(); return; } jInterface.Jnido( this, jchildidx + "start_" + jlocale + "_", null ); }
@Override public void onCreate(android.os.Bundle arg1) { if (!testjnOverride( "onCreate" )) { super.onCreate( arg1); return; } jInterface.Jnido( this, jchildidx + "onCreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onStart(){ if (!testjnOverride( "onStart" )) { super.onStart(); return; } jInterface.Jnido( this, jchildidx + "onStart_" + jlocale + "_", null ); }
@Override public boolean onException(java.lang.Object arg1,java.lang.Throwable arg2) { if (!testjnOverride( "onException" )) return super.onException( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onException_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void sendStatus(int arg1,android.os.Bundle arg2) { if (!testjnOverride( "sendStatus" )) { super.sendStatus( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "sendStatus_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void finish(int arg1,android.os.Bundle arg2) { if (!testjnOverride( "finish" )) { super.finish( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "finish_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setAutomaticPerformanceSnapshots(){ if (!testjnOverride( "setAutomaticPerformanceSnapshots" )) { super.setAutomaticPerformanceSnapshots(); return; } jInterface.Jnido( this, jchildidx + "setAutomaticPerformanceSnapshots_" + jlocale + "_", null ); }
@Override public void startPerformanceSnapshot(){ if (!testjnOverride( "startPerformanceSnapshot" )) { super.startPerformanceSnapshot(); return; } jInterface.Jnido( this, jchildidx + "startPerformanceSnapshot_" + jlocale + "_", null ); }
@Override public void endPerformanceSnapshot(){ if (!testjnOverride( "endPerformanceSnapshot" )) { super.endPerformanceSnapshot(); return; } jInterface.Jnido( this, jchildidx + "endPerformanceSnapshot_" + jlocale + "_", null ); }
@Override public void onDestroy(){ if (!testjnOverride( "onDestroy" )) { super.onDestroy(); return; } jInterface.Jnido( this, jchildidx + "onDestroy_" + jlocale + "_", null ); }
@Override public android.content.ComponentName getComponentName(){ if (!testjnOverride( "getComponentName" )) return super.getComponentName(); return (android.content.ComponentName) jInterface.Jnido( this, jchildidx + "getComponentName_" + jlocale + "_", null ); }
@Override public android.content.Context getTargetContext(){ if (!testjnOverride( "getTargetContext" )) return super.getTargetContext(); return (android.content.Context) jInterface.Jnido( this, jchildidx + "getTargetContext_" + jlocale + "_", null ); }
@Override public boolean isProfiling(){ if (!testjnOverride( "isProfiling" )) return super.isProfiling(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isProfiling_" + jlocale + "_", null ); }
@Override public void startProfiling(){ if (!testjnOverride( "startProfiling" )) { super.startProfiling(); return; } jInterface.Jnido( this, jchildidx + "startProfiling_" + jlocale + "_", null ); }
@Override public void stopProfiling(){ if (!testjnOverride( "stopProfiling" )) { super.stopProfiling(); return; } jInterface.Jnido( this, jchildidx + "stopProfiling_" + jlocale + "_", null ); }
@Override public void setInTouchMode(boolean arg1) { if (!testjnOverride( "setInTouchMode" )) { super.setInTouchMode( arg1); return; } jInterface.Jnido( this, jchildidx + "setInTouchMode_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void waitForIdle(java.lang.Runnable arg1) { if (!testjnOverride( "waitForIdle" )) { super.waitForIdle( arg1); return; } jInterface.Jnido( this, jchildidx + "waitForIdle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void waitForIdleSync(){ if (!testjnOverride( "waitForIdleSync" )) { super.waitForIdleSync(); return; } jInterface.Jnido( this, jchildidx + "waitForIdleSync_" + jlocale + "_", null ); }
@Override public void runOnMainSync(java.lang.Runnable arg1) { if (!testjnOverride( "runOnMainSync" )) { super.runOnMainSync( arg1); return; } jInterface.Jnido( this, jchildidx + "runOnMainSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.Activity startActivitySync(android.content.Intent arg1) { if (!testjnOverride( "startActivitySync" )) return super.startActivitySync( arg1); return (android.app.Activity) jInterface.Jnido( this, jchildidx + "startActivitySync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void addMonitor(android.app.Instrumentation.ActivityMonitor arg1) { if (!testjnOverride( "addMonitor" )) { super.addMonitor( arg1); return; } jInterface.Jnido( this, jchildidx + "addMonitor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor arg1,int arg2) { if (!testjnOverride( "checkMonitorHit" )) return super.checkMonitorHit( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "checkMonitorHit_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor arg1) { if (!testjnOverride( "waitForMonitor" )) return super.waitForMonitor( arg1); return (android.app.Activity) jInterface.Jnido( this, jchildidx + "waitForMonitor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor arg1,long arg2) { if (!testjnOverride( "waitForMonitorWithTimeout" )) return super.waitForMonitorWithTimeout( arg1, arg2); return (android.app.Activity) jInterface.Jnido( this, jchildidx + "waitForMonitorWithTimeout_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void removeMonitor(android.app.Instrumentation.ActivityMonitor arg1) { if (!testjnOverride( "removeMonitor" )) { super.removeMonitor( arg1); return; } jInterface.Jnido( this, jchildidx + "removeMonitor_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean invokeMenuActionSync(android.app.Activity arg1,int arg2,int arg3) { if (!testjnOverride( "invokeMenuActionSync" )) return super.invokeMenuActionSync( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "invokeMenuActionSync_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean invokeContextMenuAction(android.app.Activity arg1,int arg2,int arg3) { if (!testjnOverride( "invokeContextMenuAction" )) return super.invokeContextMenuAction( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "invokeContextMenuAction_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void sendStringSync(java.lang.String arg1) { if (!testjnOverride( "sendStringSync" )) { super.sendStringSync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendStringSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void sendKeySync(android.view.KeyEvent arg1) { if (!testjnOverride( "sendKeySync" )) { super.sendKeySync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendKeySync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void sendKeyDownUpSync(int arg1) { if (!testjnOverride( "sendKeyDownUpSync" )) { super.sendKeyDownUpSync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendKeyDownUpSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void sendCharacterSync(int arg1) { if (!testjnOverride( "sendCharacterSync" )) { super.sendCharacterSync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendCharacterSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void sendPointerSync(android.view.MotionEvent arg1) { if (!testjnOverride( "sendPointerSync" )) { super.sendPointerSync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendPointerSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void sendTrackballEventSync(android.view.MotionEvent arg1) { if (!testjnOverride( "sendTrackballEventSync" )) { super.sendTrackballEventSync( arg1); return; } jInterface.Jnido( this, jchildidx + "sendTrackballEventSync_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.Application newApplication(java.lang.ClassLoader arg1,java.lang.String arg2,android.content.Context arg3) throws java.lang.InstantiationException,java.lang.IllegalAccessException,java.lang.ClassNotFoundException { if (!testjnOverride( "newApplication" )) return super.newApplication( arg1, arg2, arg3); return (android.app.Application) jInterface.Jnido( this, jchildidx + "newApplication_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void callApplicationOnCreate(android.app.Application arg1) { if (!testjnOverride( "callApplicationOnCreate" )) { super.callApplicationOnCreate( arg1); return; } jInterface.Jnido( this, jchildidx + "callApplicationOnCreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.app.Activity newActivity(java.lang.Class arg1,android.content.Context arg2,android.os.IBinder arg3,android.app.Application arg4,android.content.Intent arg5,android.content.pm.ActivityInfo arg6,java.lang.CharSequence arg7,android.app.Activity arg8,java.lang.String arg9,java.lang.Object arg10) throws java.lang.InstantiationException,java.lang.IllegalAccessException { if (!testjnOverride( "newActivity" )) return super.newActivity( arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); return (android.app.Activity) jInterface.Jnido( this, jchildidx + "newActivity_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 } ); }
@Override public android.app.Activity newActivity(java.lang.ClassLoader arg1,java.lang.String arg2,android.content.Intent arg3) throws java.lang.InstantiationException,java.lang.IllegalAccessException,java.lang.ClassNotFoundException { if (!testjnOverride( "newActivity" )) return super.newActivity( arg1, arg2, arg3); return (android.app.Activity) jInterface.Jnido( this, jchildidx + "newActivity_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void callActivityOnCreate(android.app.Activity arg1,android.os.Bundle arg2) { if (!testjnOverride( "callActivityOnCreate" )) { super.callActivityOnCreate( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "callActivityOnCreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void callActivityOnDestroy(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnDestroy" )) { super.callActivityOnDestroy( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnDestroy_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnRestoreInstanceState(android.app.Activity arg1,android.os.Bundle arg2) { if (!testjnOverride( "callActivityOnRestoreInstanceState" )) { super.callActivityOnRestoreInstanceState( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "callActivityOnRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void callActivityOnPostCreate(android.app.Activity arg1,android.os.Bundle arg2) { if (!testjnOverride( "callActivityOnPostCreate" )) { super.callActivityOnPostCreate( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "callActivityOnPostCreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void callActivityOnNewIntent(android.app.Activity arg1,android.content.Intent arg2) { if (!testjnOverride( "callActivityOnNewIntent" )) { super.callActivityOnNewIntent( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "callActivityOnNewIntent_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void callActivityOnStart(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnStart" )) { super.callActivityOnStart( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnStart_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnRestart(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnRestart" )) { super.callActivityOnRestart( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnRestart_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnResume(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnResume" )) { super.callActivityOnResume( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnResume_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnStop(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnStop" )) { super.callActivityOnStop( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnStop_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnSaveInstanceState(android.app.Activity arg1,android.os.Bundle arg2) { if (!testjnOverride( "callActivityOnSaveInstanceState" )) { super.callActivityOnSaveInstanceState( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "callActivityOnSaveInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void callActivityOnPause(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnPause" )) { super.callActivityOnPause( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnPause_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void callActivityOnUserLeaving(android.app.Activity arg1) { if (!testjnOverride( "callActivityOnUserLeaving" )) { super.callActivityOnUserLeaving( arg1); return; } jInterface.Jnido( this, jchildidx + "callActivityOnUserLeaving_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void startAllocCounting(){ if (!testjnOverride( "startAllocCounting" )) { super.startAllocCounting(); return; } jInterface.Jnido( this, jchildidx + "startAllocCounting_" + jlocale + "_", null ); }
@Override public void stopAllocCounting(){ if (!testjnOverride( "stopAllocCounting" )) { super.stopAllocCounting(); return; } jInterface.Jnido( this, jchildidx + "stopAllocCounting_" + jlocale + "_", null ); }
@Override public android.os.Bundle getAllocCounts(){ if (!testjnOverride( "getAllocCounts" )) return super.getAllocCounts(); return (android.os.Bundle) jInterface.Jnido( this, jchildidx + "getAllocCounts_" + jlocale + "_", null ); }
@Override public android.os.Bundle getBinderCounts(){ if (!testjnOverride( "getBinderCounts" )) return super.getBinderCounts(); return (android.os.Bundle) jInterface.Jnido( this, jchildidx + "getBinderCounts_" + jlocale + "_", null ); }
}
