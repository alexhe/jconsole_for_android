package org.dykman.jn.android.inputmethodservice;
public class KeyboardView extends android.inputmethodservice.KeyboardView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public KeyboardView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public KeyboardView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void closing(){ if (!testjnOverride( "closing" )) { super.closing(); return; } jInterface.Jnido( this, jchildidx + "closing_" + jlocale + "_", null ); }
@Override public void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener arg1) { if (!testjnOverride( "setOnKeyboardActionListener" )) { super.setOnKeyboardActionListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnKeyboardActionListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setKeyboard(android.inputmethodservice.Keyboard arg1) { if (!testjnOverride( "setKeyboard" )) { super.setKeyboard( arg1); return; } jInterface.Jnido( this, jchildidx + "setKeyboard_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.inputmethodservice.Keyboard getKeyboard(){ if (!testjnOverride( "getKeyboard" )) return super.getKeyboard(); return (android.inputmethodservice.Keyboard) jInterface.Jnido( this, jchildidx + "getKeyboard_" + jlocale + "_", null ); }
@Override public boolean setShifted(boolean arg1) { if (!testjnOverride( "setShifted" )) return super.setShifted( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "setShifted_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isShifted(){ if (!testjnOverride( "isShifted" )) return super.isShifted(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isShifted_" + jlocale + "_", null ); }
@Override public void setPreviewEnabled(boolean arg1) { if (!testjnOverride( "setPreviewEnabled" )) { super.setPreviewEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setPreviewEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isPreviewEnabled(){ if (!testjnOverride( "isPreviewEnabled" )) return super.isPreviewEnabled(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isPreviewEnabled_" + jlocale + "_", null ); }
@Override public void setVerticalCorrection(int arg1) { if (!testjnOverride( "setVerticalCorrection" )) { super.setVerticalCorrection( arg1); return; } jInterface.Jnido( this, jchildidx + "setVerticalCorrection_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setPopupParent(android.view.View arg1) { if (!testjnOverride( "setPopupParent" )) { super.setPopupParent( arg1); return; } jInterface.Jnido( this, jchildidx + "setPopupParent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setPopupOffset(int arg1,int arg2) { if (!testjnOverride( "setPopupOffset" )) { super.setPopupOffset( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setPopupOffset_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setProximityCorrectionEnabled(boolean arg1) { if (!testjnOverride( "setProximityCorrectionEnabled" )) { super.setProximityCorrectionEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setProximityCorrectionEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isProximityCorrectionEnabled(){ if (!testjnOverride( "isProximityCorrectionEnabled" )) return super.isProximityCorrectionEnabled(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isProximityCorrectionEnabled_" + jlocale + "_", null ); }
@Override public void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void onSizeChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onSizeChanged" )) { super.onSizeChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onSizeChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void onDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "onDraw" )) { super.onDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "onDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void invalidateAllKeys(){ if (!testjnOverride( "invalidateAllKeys" )) { super.invalidateAllKeys(); return; } jInterface.Jnido( this, jchildidx + "invalidateAllKeys_" + jlocale + "_", null ); }
@Override public void invalidateKey(int arg1) { if (!testjnOverride( "invalidateKey" )) { super.invalidateKey( arg1); return; } jInterface.Jnido( this, jchildidx + "invalidateKey_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean onLongPress(android.inputmethodservice.Keyboard.Key arg1) { if (!testjnOverride( "onLongPress" )) return super.onLongPress( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onLongPress_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void swipeRight(){ if (!testjnOverride( "swipeRight" )) { super.swipeRight(); return; } jInterface.Jnido( this, jchildidx + "swipeRight_" + jlocale + "_", null ); }
@Override protected void swipeLeft(){ if (!testjnOverride( "swipeLeft" )) { super.swipeLeft(); return; } jInterface.Jnido( this, jchildidx + "swipeLeft_" + jlocale + "_", null ); }
@Override protected void swipeUp(){ if (!testjnOverride( "swipeUp" )) { super.swipeUp(); return; } jInterface.Jnido( this, jchildidx + "swipeUp_" + jlocale + "_", null ); }
@Override protected void swipeDown(){ if (!testjnOverride( "swipeDown" )) { super.swipeDown(); return; } jInterface.Jnido( this, jchildidx + "swipeDown_" + jlocale + "_", null ); }
@Override public void onDetachedFromWindow(){ if (!testjnOverride( "onDetachedFromWindow" )) { super.onDetachedFromWindow(); return; } jInterface.Jnido( this, jchildidx + "onDetachedFromWindow_" + jlocale + "_", null ); }
@Override public boolean handleBack(){ if (!testjnOverride( "handleBack" )) return super.handleBack(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "handleBack_" + jlocale + "_", null ); }
@Override public void onClick(android.view.View arg1) { if (!testjnOverride( "onClick" )) { super.onClick( arg1); return; } jInterface.Jnido( this, jchildidx + "onClick_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
