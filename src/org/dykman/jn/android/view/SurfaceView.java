package org.dykman.jn.android.view;
public class SurfaceView extends android.view.SurfaceView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public SurfaceView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public SurfaceView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public SurfaceView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public android.view.SurfaceHolder getHolder(){ if (!testjnOverride( "getHolder" )) return super.getHolder(); return (android.view.SurfaceHolder) jInterface.Jnido( this, jchildidx + "getHolder_" + jlocale + "_", null ); }
@Override protected void onAttachedToWindow(){ if (!testjnOverride( "onAttachedToWindow" )) { super.onAttachedToWindow(); return; } jInterface.Jnido( this, jchildidx + "onAttachedToWindow_" + jlocale + "_", null ); }
@Override protected void onWindowVisibilityChanged(int arg1) { if (!testjnOverride( "onWindowVisibilityChanged" )) { super.onWindowVisibilityChanged( arg1); return; } jInterface.Jnido( this, jchildidx + "onWindowVisibilityChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setVisibility(int arg1) { if (!testjnOverride( "setVisibility" )) { super.setVisibility( arg1); return; } jInterface.Jnido( this, jchildidx + "setVisibility_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onDetachedFromWindow(){ if (!testjnOverride( "onDetachedFromWindow" )) { super.onDetachedFromWindow(); return; } jInterface.Jnido( this, jchildidx + "onDetachedFromWindow_" + jlocale + "_", null ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onScrollChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onScrollChanged" )) { super.onScrollChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onScrollChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override protected void onSizeChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onSizeChanged" )) { super.onSizeChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onSizeChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public boolean gatherTransparentRegion(android.graphics.Region arg1) { if (!testjnOverride( "gatherTransparentRegion" )) return super.gatherTransparentRegion( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "gatherTransparentRegion_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void draw(android.graphics.Canvas arg1) { if (!testjnOverride( "draw" )) { super.draw( arg1); return; } jInterface.Jnido( this, jchildidx + "draw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void dispatchDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "dispatchDraw" )) { super.dispatchDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "dispatchDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setZOrderMediaOverlay(boolean arg1) { if (!testjnOverride( "setZOrderMediaOverlay" )) { super.setZOrderMediaOverlay( arg1); return; } jInterface.Jnido( this, jchildidx + "setZOrderMediaOverlay_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setZOrderOnTop(boolean arg1) { if (!testjnOverride( "setZOrderOnTop" )) { super.setZOrderOnTop( arg1); return; } jInterface.Jnido( this, jchildidx + "setZOrderOnTop_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
