package org.dykman.jn.android.widget;
public class Gallery extends android.widget.Gallery{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public Gallery(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public Gallery(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public Gallery(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setCallbackDuringFling(boolean arg1) { if (!testjnOverride( "setCallbackDuringFling" )) { super.setCallbackDuringFling( arg1); return; } jInterface.Jnido( this, jchildidx + "setCallbackDuringFling_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setAnimationDuration(int arg1) { if (!testjnOverride( "setAnimationDuration" )) { super.setAnimationDuration( arg1); return; } jInterface.Jnido( this, jchildidx + "setAnimationDuration_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setSpacing(int arg1) { if (!testjnOverride( "setSpacing" )) { super.setSpacing( arg1); return; } jInterface.Jnido( this, jchildidx + "setSpacing_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setUnselectedAlpha(float arg1) { if (!testjnOverride( "setUnselectedAlpha" )) { super.setUnselectedAlpha( arg1); return; } jInterface.Jnido( this, jchildidx + "setUnselectedAlpha_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean getChildStaticTransformation(android.view.View arg1,android.view.animation.Transformation arg2) { if (!testjnOverride( "getChildStaticTransformation" )) return super.getChildStaticTransformation( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "getChildStaticTransformation_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected int computeHorizontalScrollExtent(){ if (!testjnOverride( "computeHorizontalScrollExtent" )) return super.computeHorizontalScrollExtent(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeHorizontalScrollExtent_" + jlocale + "_", null ); }
@Override protected int computeHorizontalScrollOffset(){ if (!testjnOverride( "computeHorizontalScrollOffset" )) return super.computeHorizontalScrollOffset(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeHorizontalScrollOffset_" + jlocale + "_", null ); }
@Override protected int computeHorizontalScrollRange(){ if (!testjnOverride( "computeHorizontalScrollRange" )) return super.computeHorizontalScrollRange(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeHorizontalScrollRange_" + jlocale + "_", null ); }
@Override protected boolean checkLayoutParams(android.view.ViewGroup.LayoutParams arg1) { if (!testjnOverride( "checkLayoutParams" )) return super.checkLayoutParams( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "checkLayoutParams_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onLayout(boolean arg1,int arg2,int arg3,int arg4,int arg5) { if (!testjnOverride( "onLayout" )) { super.onLayout( arg1, arg2, arg3, arg4, arg5); return; } jInterface.Jnido( this, jchildidx + "onLayout_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onSingleTapUp(android.view.MotionEvent arg1) { if (!testjnOverride( "onSingleTapUp" )) return super.onSingleTapUp( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onSingleTapUp_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onFling(android.view.MotionEvent arg1,android.view.MotionEvent arg2,float arg3,float arg4) { if (!testjnOverride( "onFling" )) return super.onFling( arg1, arg2, arg3, arg4); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onFling_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public boolean onScroll(android.view.MotionEvent arg1,android.view.MotionEvent arg2,float arg3,float arg4) { if (!testjnOverride( "onScroll" )) return super.onScroll( arg1, arg2, arg3, arg4); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onScroll_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public boolean onDown(android.view.MotionEvent arg1) { if (!testjnOverride( "onDown" )) return super.onDown( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onDown_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onLongPress(android.view.MotionEvent arg1) { if (!testjnOverride( "onLongPress" )) { super.onLongPress( arg1); return; } jInterface.Jnido( this, jchildidx + "onLongPress_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onShowPress(android.view.MotionEvent arg1) { if (!testjnOverride( "onShowPress" )) { super.onShowPress( arg1); return; } jInterface.Jnido( this, jchildidx + "onShowPress_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void dispatchSetSelected(boolean arg1) { if (!testjnOverride( "dispatchSetSelected" )) { super.dispatchSetSelected( arg1); return; } jInterface.Jnido( this, jchildidx + "dispatchSetSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void dispatchSetPressed(boolean arg1) { if (!testjnOverride( "dispatchSetPressed" )) { super.dispatchSetPressed( arg1); return; } jInterface.Jnido( this, jchildidx + "dispatchSetPressed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean showContextMenuForChild(android.view.View arg1) { if (!testjnOverride( "showContextMenuForChild" )) return super.showContextMenuForChild( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "showContextMenuForChild_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean showContextMenu(){ if (!testjnOverride( "showContextMenu" )) return super.showContextMenu(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "showContextMenu_" + jlocale + "_", null ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setGravity(int arg1) { if (!testjnOverride( "setGravity" )) { super.setGravity( arg1); return; } jInterface.Jnido( this, jchildidx + "setGravity_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected int getChildDrawingOrder(int arg1,int arg2) { if (!testjnOverride( "getChildDrawingOrder" )) return super.getChildDrawingOrder( arg1, arg2); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getChildDrawingOrder_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onFocusChanged(boolean arg1,int arg2,android.graphics.Rect arg3) { if (!testjnOverride( "onFocusChanged" )) { super.onFocusChanged( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
}
