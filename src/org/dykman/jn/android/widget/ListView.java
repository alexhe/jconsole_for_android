package org.dykman.jn.android.widget;
public class ListView extends android.widget.ListView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public ListView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public ListView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public ListView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public int getMaxScrollAmount(){ if (!testjnOverride( "getMaxScrollAmount" )) return super.getMaxScrollAmount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getMaxScrollAmount_" + jlocale + "_", null ); }
@Override public void addHeaderView(android.view.View arg1,java.lang.Object arg2,boolean arg3) { if (!testjnOverride( "addHeaderView" )) { super.addHeaderView( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "addHeaderView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void addHeaderView(android.view.View arg1) { if (!testjnOverride( "addHeaderView" )) { super.addHeaderView( arg1); return; } jInterface.Jnido( this, jchildidx + "addHeaderView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getHeaderViewsCount(){ if (!testjnOverride( "getHeaderViewsCount" )) return super.getHeaderViewsCount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getHeaderViewsCount_" + jlocale + "_", null ); }
@Override public boolean removeHeaderView(android.view.View arg1) { if (!testjnOverride( "removeHeaderView" )) return super.removeHeaderView( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "removeHeaderView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void addFooterView(android.view.View arg1,java.lang.Object arg2,boolean arg3) { if (!testjnOverride( "addFooterView" )) { super.addFooterView( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "addFooterView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void addFooterView(android.view.View arg1) { if (!testjnOverride( "addFooterView" )) { super.addFooterView( arg1); return; } jInterface.Jnido( this, jchildidx + "addFooterView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getFooterViewsCount(){ if (!testjnOverride( "getFooterViewsCount" )) return super.getFooterViewsCount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getFooterViewsCount_" + jlocale + "_", null ); }
@Override public boolean removeFooterView(android.view.View arg1) { if (!testjnOverride( "removeFooterView" )) return super.removeFooterView( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "removeFooterView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean requestChildRectangleOnScreen(android.view.View arg1,android.graphics.Rect arg2,boolean arg3) { if (!testjnOverride( "requestChildRectangleOnScreen" )) return super.requestChildRectangleOnScreen( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "requestChildRectangleOnScreen_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void layoutChildren(){ if (!testjnOverride( "layoutChildren" )) { super.layoutChildren(); return; } jInterface.Jnido( this, jchildidx + "layoutChildren_" + jlocale + "_", null ); }
@Override protected boolean canAnimate(){ if (!testjnOverride( "canAnimate" )) return super.canAnimate(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "canAnimate_" + jlocale + "_", null ); }
@Override public void setSelection(int arg1) { if (!testjnOverride( "setSelection" )) { super.setSelection( arg1); return; } jInterface.Jnido( this, jchildidx + "setSelection_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setSelectionFromTop(int arg1,int arg2) { if (!testjnOverride( "setSelectionFromTop" )) { super.setSelectionFromTop( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setSelectionFromTop_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent arg1) { if (!testjnOverride( "dispatchPopulateAccessibilityEvent" )) return super.dispatchPopulateAccessibilityEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchPopulateAccessibilityEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setSelectionAfterHeaderView(){ if (!testjnOverride( "setSelectionAfterHeaderView" )) { super.setSelectionAfterHeaderView(); return; } jInterface.Jnido( this, jchildidx + "setSelectionAfterHeaderView_" + jlocale + "_", null ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyMultiple(int arg1,int arg2,android.view.KeyEvent arg3) { if (!testjnOverride( "onKeyMultiple" )) return super.onKeyMultiple( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyMultiple_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setItemsCanFocus(boolean arg1) { if (!testjnOverride( "setItemsCanFocus" )) { super.setItemsCanFocus( arg1); return; } jInterface.Jnido( this, jchildidx + "setItemsCanFocus_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean getItemsCanFocus(){ if (!testjnOverride( "getItemsCanFocus" )) return super.getItemsCanFocus(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "getItemsCanFocus_" + jlocale + "_", null ); }
@Override public void setCacheColorHint(int arg1) { if (!testjnOverride( "setCacheColorHint" )) { super.setCacheColorHint( arg1); return; } jInterface.Jnido( this, jchildidx + "setCacheColorHint_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void dispatchDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "dispatchDraw" )) { super.dispatchDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "dispatchDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.graphics.drawable.Drawable getDivider(){ if (!testjnOverride( "getDivider" )) return super.getDivider(); return (android.graphics.drawable.Drawable) jInterface.Jnido( this, jchildidx + "getDivider_" + jlocale + "_", null ); }
@Override public void setDivider(android.graphics.drawable.Drawable arg1) { if (!testjnOverride( "setDivider" )) { super.setDivider( arg1); return; } jInterface.Jnido( this, jchildidx + "setDivider_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getDividerHeight(){ if (!testjnOverride( "getDividerHeight" )) return super.getDividerHeight(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getDividerHeight_" + jlocale + "_", null ); }
@Override public void setDividerHeight(int arg1) { if (!testjnOverride( "setDividerHeight" )) { super.setDividerHeight( arg1); return; } jInterface.Jnido( this, jchildidx + "setDividerHeight_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setHeaderDividersEnabled(boolean arg1) { if (!testjnOverride( "setHeaderDividersEnabled" )) { super.setHeaderDividersEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setHeaderDividersEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setFooterDividersEnabled(boolean arg1) { if (!testjnOverride( "setFooterDividersEnabled" )) { super.setFooterDividersEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setFooterDividersEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onFocusChanged(boolean arg1,int arg2,android.graphics.Rect arg3) { if (!testjnOverride( "onFocusChanged" )) { super.onFocusChanged( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onFinishInflate(){ if (!testjnOverride( "onFinishInflate" )) { super.onFinishInflate(); return; } jInterface.Jnido( this, jchildidx + "onFinishInflate_" + jlocale + "_", null ); }
@Override protected android.view.View findViewTraversal(int arg1) { if (!testjnOverride( "findViewTraversal" )) return super.findViewTraversal( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "findViewTraversal_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected android.view.View findViewWithTagTraversal(java.lang.Object arg1) { if (!testjnOverride( "findViewWithTagTraversal" )) return super.findViewWithTagTraversal( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "findViewWithTagTraversal_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getChoiceMode(){ if (!testjnOverride( "getChoiceMode" )) return super.getChoiceMode(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getChoiceMode_" + jlocale + "_", null ); }
@Override public void setChoiceMode(int arg1) { if (!testjnOverride( "setChoiceMode" )) { super.setChoiceMode( arg1); return; } jInterface.Jnido( this, jchildidx + "setChoiceMode_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean performItemClick(android.view.View arg1,int arg2,long arg3) { if (!testjnOverride( "performItemClick" )) return super.performItemClick( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "performItemClick_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setItemChecked(int arg1,boolean arg2) { if (!testjnOverride( "setItemChecked" )) { super.setItemChecked( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setItemChecked_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean isItemChecked(int arg1) { if (!testjnOverride( "isItemChecked" )) return super.isItemChecked( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isItemChecked_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getCheckedItemPosition(){ if (!testjnOverride( "getCheckedItemPosition" )) return super.getCheckedItemPosition(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getCheckedItemPosition_" + jlocale + "_", null ); }
@Override public android.util.SparseBooleanArray getCheckedItemPositions(){ if (!testjnOverride( "getCheckedItemPositions" )) return super.getCheckedItemPositions(); return (android.util.SparseBooleanArray) jInterface.Jnido( this, jchildidx + "getCheckedItemPositions_" + jlocale + "_", null ); }
@Override public long[] getCheckItemIds(){ if (!testjnOverride( "getCheckItemIds" )) return super.getCheckItemIds(); return (long[]) jInterface.Jnidol( this, jchildidx + "getCheckItemIds_" + jlocale + "_", null ); }
@Override public void clearChoices(){ if (!testjnOverride( "clearChoices" )) { super.clearChoices(); return; } jInterface.Jnido( this, jchildidx + "clearChoices_" + jlocale + "_", null ); }
@Override public android.os.Parcelable onSaveInstanceState(){ if (!testjnOverride( "onSaveInstanceState" )) return super.onSaveInstanceState(); return (android.os.Parcelable) jInterface.Jnido( this, jchildidx + "onSaveInstanceState_" + jlocale + "_", null ); }
@Override public void onRestoreInstanceState(android.os.Parcelable arg1) { if (!testjnOverride( "onRestoreInstanceState" )) { super.onRestoreInstanceState( arg1); return; } jInterface.Jnido( this, jchildidx + "onRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
