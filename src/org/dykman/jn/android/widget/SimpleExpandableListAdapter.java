package org.dykman.jn.android.widget;
public class SimpleExpandableListAdapter extends android.widget.SimpleExpandableListAdapter{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public SimpleExpandableListAdapter(android.content.Context arg1,java.util.List arg2,int arg3,java.lang.String[] arg4,int[] arg5,java.util.List arg6,int arg7,java.lang.String[] arg8,int[] arg9, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 } ); }
public SimpleExpandableListAdapter(android.content.Context arg1,java.util.List arg2,int arg3,int arg4,java.lang.String[] arg5,int[] arg6,java.util.List arg7,int arg8,java.lang.String[] arg9,int[] arg10, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 } ); }
public SimpleExpandableListAdapter(android.content.Context arg1,java.util.List arg2,int arg3,int arg4,java.lang.String[] arg5,int[] arg6,java.util.List arg7,int arg8,int arg9,java.lang.String[] arg10,int[] arg11, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11 } ); }
@Override public java.lang.Object getChild(int arg1,int arg2) { if (!testjnOverride( "getChild" )) return super.getChild( arg1, arg2); return (java.lang.Object) jInterface.Jnido( this, jchildidx + "getChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public long getChildId(int arg1,int arg2) { if (!testjnOverride( "getChildId" )) return super.getChildId( arg1, arg2); return (java.lang.Long) jInterface.Jnido( this, jchildidx + "getChildId_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.view.View getChildView(int arg1,int arg2,boolean arg3,android.view.View arg4,android.view.ViewGroup arg5) { if (!testjnOverride( "getChildView" )) return super.getChildView( arg1, arg2, arg3, arg4, arg5); return (android.view.View) jInterface.Jnido( this, jchildidx + "getChildView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override public android.view.View newChildView(boolean arg1,android.view.ViewGroup arg2) { if (!testjnOverride( "newChildView" )) return super.newChildView( arg1, arg2); return (android.view.View) jInterface.Jnido( this, jchildidx + "newChildView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public int getChildrenCount(int arg1) { if (!testjnOverride( "getChildrenCount" )) return super.getChildrenCount( arg1); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getChildrenCount_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.Object getGroup(int arg1) { if (!testjnOverride( "getGroup" )) return super.getGroup( arg1); return (java.lang.Object) jInterface.Jnido( this, jchildidx + "getGroup_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getGroupCount(){ if (!testjnOverride( "getGroupCount" )) return super.getGroupCount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getGroupCount_" + jlocale + "_", null ); }
@Override public long getGroupId(int arg1) { if (!testjnOverride( "getGroupId" )) return super.getGroupId( arg1); return (java.lang.Long) jInterface.Jnido( this, jchildidx + "getGroupId_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.view.View getGroupView(int arg1,boolean arg2,android.view.View arg3,android.view.ViewGroup arg4) { if (!testjnOverride( "getGroupView" )) return super.getGroupView( arg1, arg2, arg3, arg4); return (android.view.View) jInterface.Jnido( this, jchildidx + "getGroupView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public android.view.View newGroupView(boolean arg1,android.view.ViewGroup arg2) { if (!testjnOverride( "newGroupView" )) return super.newGroupView( arg1, arg2); return (android.view.View) jInterface.Jnido( this, jchildidx + "newGroupView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean isChildSelectable(int arg1,int arg2) { if (!testjnOverride( "isChildSelectable" )) return super.isChildSelectable( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isChildSelectable_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean hasStableIds(){ if (!testjnOverride( "hasStableIds" )) return super.hasStableIds(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "hasStableIds_" + jlocale + "_", null ); }
}
