package org.dykman.jn.android.widget;
public class GridView extends android.widget.GridView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public GridView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public GridView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public GridView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void attachLayoutAnimationParameters(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2,int arg3,int arg4) { if (!testjnOverride( "attachLayoutAnimationParameters" )) { super.attachLayoutAnimationParameters( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "attachLayoutAnimationParameters_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override protected void layoutChildren(){ if (!testjnOverride( "layoutChildren" )) { super.layoutChildren(); return; } jInterface.Jnido( this, jchildidx + "layoutChildren_" + jlocale + "_", null ); }
@Override public void setSelection(int arg1) { if (!testjnOverride( "setSelection" )) { super.setSelection( arg1); return; } jInterface.Jnido( this, jchildidx + "setSelection_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onKeyDown(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyDown" )) return super.onKeyDown( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyDown_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onKeyMultiple(int arg1,int arg2,android.view.KeyEvent arg3) { if (!testjnOverride( "onKeyMultiple" )) return super.onKeyMultiple( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyMultiple_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean onKeyUp(int arg1,android.view.KeyEvent arg2) { if (!testjnOverride( "onKeyUp" )) return super.onKeyUp( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onKeyUp_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onFocusChanged(boolean arg1,int arg2,android.graphics.Rect arg3) { if (!testjnOverride( "onFocusChanged" )) { super.onFocusChanged( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "onFocusChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setGravity(int arg1) { if (!testjnOverride( "setGravity" )) { super.setGravity( arg1); return; } jInterface.Jnido( this, jchildidx + "setGravity_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setHorizontalSpacing(int arg1) { if (!testjnOverride( "setHorizontalSpacing" )) { super.setHorizontalSpacing( arg1); return; } jInterface.Jnido( this, jchildidx + "setHorizontalSpacing_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setVerticalSpacing(int arg1) { if (!testjnOverride( "setVerticalSpacing" )) { super.setVerticalSpacing( arg1); return; } jInterface.Jnido( this, jchildidx + "setVerticalSpacing_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setStretchMode(int arg1) { if (!testjnOverride( "setStretchMode" )) { super.setStretchMode( arg1); return; } jInterface.Jnido( this, jchildidx + "setStretchMode_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getStretchMode(){ if (!testjnOverride( "getStretchMode" )) return super.getStretchMode(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getStretchMode_" + jlocale + "_", null ); }
@Override public void setColumnWidth(int arg1) { if (!testjnOverride( "setColumnWidth" )) { super.setColumnWidth( arg1); return; } jInterface.Jnido( this, jchildidx + "setColumnWidth_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setNumColumns(int arg1) { if (!testjnOverride( "setNumColumns" )) { super.setNumColumns( arg1); return; } jInterface.Jnido( this, jchildidx + "setNumColumns_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected int computeVerticalScrollExtent(){ if (!testjnOverride( "computeVerticalScrollExtent" )) return super.computeVerticalScrollExtent(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollExtent_" + jlocale + "_", null ); }
@Override protected int computeVerticalScrollOffset(){ if (!testjnOverride( "computeVerticalScrollOffset" )) return super.computeVerticalScrollOffset(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollOffset_" + jlocale + "_", null ); }
@Override protected int computeVerticalScrollRange(){ if (!testjnOverride( "computeVerticalScrollRange" )) return super.computeVerticalScrollRange(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeVerticalScrollRange_" + jlocale + "_", null ); }
}
