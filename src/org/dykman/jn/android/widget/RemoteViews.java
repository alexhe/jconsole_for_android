package org.dykman.jn.android.widget;
public class RemoteViews extends android.widget.RemoteViews{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public RemoteViews(java.lang.String arg1,int arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public RemoteViews(android.os.Parcel arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.String getPackage(){ if (!testjnOverride( "getPackage" )) return super.getPackage(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getPackage_" + jlocale + "_", null ); }
@Override public void setBoolean(int arg1,java.lang.String arg2,boolean arg3) { if (!testjnOverride( "setBoolean" )) { super.setBoolean( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setBoolean_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setByte(int arg1,java.lang.String arg2,byte arg3) { if (!testjnOverride( "setByte" )) { super.setByte( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setByte_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setChar(int arg1,java.lang.String arg2,char arg3) { if (!testjnOverride( "setChar" )) { super.setChar( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setChar_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setDouble(int arg1,java.lang.String arg2,double arg3) { if (!testjnOverride( "setDouble" )) { super.setDouble( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setDouble_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setFloat(int arg1,java.lang.String arg2,float arg3) { if (!testjnOverride( "setFloat" )) { super.setFloat( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setFloat_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setInt(int arg1,java.lang.String arg2,int arg3) { if (!testjnOverride( "setInt" )) { super.setInt( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setInt_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setLong(int arg1,java.lang.String arg2,long arg3) { if (!testjnOverride( "setLong" )) { super.setLong( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setLong_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setShort(int arg1,java.lang.String arg2,short arg3) { if (!testjnOverride( "setShort" )) { super.setShort( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setShort_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public int getLayoutId(){ if (!testjnOverride( "getLayoutId" )) return super.getLayoutId(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getLayoutId_" + jlocale + "_", null ); }
@Override public void addView(int arg1,android.widget.RemoteViews arg2) { if (!testjnOverride( "addView" )) { super.addView( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void removeAllViews(int arg1) { if (!testjnOverride( "removeAllViews" )) { super.removeAllViews( arg1); return; } jInterface.Jnido( this, jchildidx + "removeAllViews_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setViewVisibility(int arg1,int arg2) { if (!testjnOverride( "setViewVisibility" )) { super.setViewVisibility( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setViewVisibility_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setTextViewText(int arg1,java.lang.CharSequence arg2) { if (!testjnOverride( "setTextViewText" )) { super.setTextViewText( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setTextViewText_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setImageViewResource(int arg1,int arg2) { if (!testjnOverride( "setImageViewResource" )) { super.setImageViewResource( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setImageViewResource_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setImageViewUri(int arg1,android.net.Uri arg2) { if (!testjnOverride( "setImageViewUri" )) { super.setImageViewUri( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setImageViewUri_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setImageViewBitmap(int arg1,android.graphics.Bitmap arg2) { if (!testjnOverride( "setImageViewBitmap" )) { super.setImageViewBitmap( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setImageViewBitmap_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setChronometer(int arg1,long arg2,java.lang.String arg3,boolean arg4) { if (!testjnOverride( "setChronometer" )) { super.setChronometer( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "setChronometer_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void setProgressBar(int arg1,int arg2,int arg3,boolean arg4) { if (!testjnOverride( "setProgressBar" )) { super.setProgressBar( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "setProgressBar_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void setOnClickPendingIntent(int arg1,android.app.PendingIntent arg2) { if (!testjnOverride( "setOnClickPendingIntent" )) { super.setOnClickPendingIntent( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setOnClickPendingIntent_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setTextColor(int arg1,int arg2) { if (!testjnOverride( "setTextColor" )) { super.setTextColor( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setTextColor_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setString(int arg1,java.lang.String arg2,java.lang.String arg3) { if (!testjnOverride( "setString" )) { super.setString( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setString_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setCharSequence(int arg1,java.lang.String arg2,java.lang.CharSequence arg3) { if (!testjnOverride( "setCharSequence" )) { super.setCharSequence( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setCharSequence_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setUri(int arg1,java.lang.String arg2,android.net.Uri arg3) { if (!testjnOverride( "setUri" )) { super.setUri( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setUri_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void setBitmap(int arg1,java.lang.String arg2,android.graphics.Bitmap arg3) { if (!testjnOverride( "setBitmap" )) { super.setBitmap( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "setBitmap_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public android.view.View apply(android.content.Context arg1,android.view.ViewGroup arg2) { if (!testjnOverride( "apply" )) return super.apply( arg1, arg2); return (android.view.View) jInterface.Jnido( this, jchildidx + "apply_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void reapply(android.content.Context arg1,android.view.View arg2) { if (!testjnOverride( "reapply" )) { super.reapply( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "reapply_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean onLoadClass(java.lang.Class arg1) { if (!testjnOverride( "onLoadClass" )) return super.onLoadClass( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onLoadClass_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int describeContents(){ if (!testjnOverride( "describeContents" )) return super.describeContents(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "describeContents_" + jlocale + "_", null ); }
@Override public void writeToParcel(android.os.Parcel arg1,int arg2) { if (!testjnOverride( "writeToParcel" )) { super.writeToParcel( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "writeToParcel_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
}
