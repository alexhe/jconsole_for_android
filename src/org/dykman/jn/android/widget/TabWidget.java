package org.dykman.jn.android.widget;
public class TabWidget extends android.widget.TabWidget{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public TabWidget(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public TabWidget(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public TabWidget(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void onSizeChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onSizeChanged" )) { super.onSizeChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onSizeChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override protected int getChildDrawingOrder(int arg1,int arg2) { if (!testjnOverride( "getChildDrawingOrder" )) return super.getChildDrawingOrder( arg1, arg2); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getChildDrawingOrder_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public android.view.View getChildTabViewAt(int arg1) { if (!testjnOverride( "getChildTabViewAt" )) return super.getChildTabViewAt( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "getChildTabViewAt_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getTabCount(){ if (!testjnOverride( "getTabCount" )) return super.getTabCount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getTabCount_" + jlocale + "_", null ); }
@Override public void setDividerDrawable(android.graphics.drawable.Drawable arg1) { if (!testjnOverride( "setDividerDrawable" )) { super.setDividerDrawable( arg1); return; } jInterface.Jnido( this, jchildidx + "setDividerDrawable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setDividerDrawable(int arg1) { if (!testjnOverride( "setDividerDrawable" )) { super.setDividerDrawable( arg1); return; } jInterface.Jnido( this, jchildidx + "setDividerDrawable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void childDrawableStateChanged(android.view.View arg1) { if (!testjnOverride( "childDrawableStateChanged" )) { super.childDrawableStateChanged( arg1); return; } jInterface.Jnido( this, jchildidx + "childDrawableStateChanged_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void dispatchDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "dispatchDraw" )) { super.dispatchDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "dispatchDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setCurrentTab(int arg1) { if (!testjnOverride( "setCurrentTab" )) { super.setCurrentTab( arg1); return; } jInterface.Jnido( this, jchildidx + "setCurrentTab_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void focusCurrentTab(int arg1) { if (!testjnOverride( "focusCurrentTab" )) { super.focusCurrentTab( arg1); return; } jInterface.Jnido( this, jchildidx + "focusCurrentTab_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setEnabled(boolean arg1) { if (!testjnOverride( "setEnabled" )) { super.setEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void addView(android.view.View arg1) { if (!testjnOverride( "addView" )) { super.addView( arg1); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onFocusChange(android.view.View arg1,boolean arg2) { if (!testjnOverride( "onFocusChange" )) { super.onFocusChange( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onFocusChange_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
}
