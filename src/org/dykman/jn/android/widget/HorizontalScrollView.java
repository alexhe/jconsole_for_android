package org.dykman.jn.android.widget;
public class HorizontalScrollView extends android.widget.HorizontalScrollView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public HorizontalScrollView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public HorizontalScrollView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public HorizontalScrollView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected float getLeftFadingEdgeStrength(){ if (!testjnOverride( "getLeftFadingEdgeStrength" )) return super.getLeftFadingEdgeStrength(); return (java.lang.Float) jInterface.Jnido( this, jchildidx + "getLeftFadingEdgeStrength_" + jlocale + "_", null ); }
@Override protected float getRightFadingEdgeStrength(){ if (!testjnOverride( "getRightFadingEdgeStrength" )) return super.getRightFadingEdgeStrength(); return (java.lang.Float) jInterface.Jnido( this, jchildidx + "getRightFadingEdgeStrength_" + jlocale + "_", null ); }
@Override public int getMaxScrollAmount(){ if (!testjnOverride( "getMaxScrollAmount" )) return super.getMaxScrollAmount(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getMaxScrollAmount_" + jlocale + "_", null ); }
@Override public void addView(android.view.View arg1) { if (!testjnOverride( "addView" )) { super.addView( arg1); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void addView(android.view.View arg1,int arg2) { if (!testjnOverride( "addView" )) { super.addView( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void addView(android.view.View arg1,android.view.ViewGroup.LayoutParams arg2) { if (!testjnOverride( "addView" )) { super.addView( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void addView(android.view.View arg1,int arg2,android.view.ViewGroup.LayoutParams arg3) { if (!testjnOverride( "addView" )) { super.addView( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "addView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public boolean isFillViewport(){ if (!testjnOverride( "isFillViewport" )) return super.isFillViewport(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isFillViewport_" + jlocale + "_", null ); }
@Override public void setFillViewport(boolean arg1) { if (!testjnOverride( "setFillViewport" )) { super.setFillViewport( arg1); return; } jInterface.Jnido( this, jchildidx + "setFillViewport_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isSmoothScrollingEnabled(){ if (!testjnOverride( "isSmoothScrollingEnabled" )) return super.isSmoothScrollingEnabled(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isSmoothScrollingEnabled_" + jlocale + "_", null ); }
@Override public void setSmoothScrollingEnabled(boolean arg1) { if (!testjnOverride( "setSmoothScrollingEnabled" )) { super.setSmoothScrollingEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setSmoothScrollingEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean dispatchKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "dispatchKeyEvent" )) return super.dispatchKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "dispatchKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean executeKeyEvent(android.view.KeyEvent arg1) { if (!testjnOverride( "executeKeyEvent" )) return super.executeKeyEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "executeKeyEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onInterceptTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onInterceptTouchEvent" )) return super.onInterceptTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onInterceptTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean onTouchEvent(android.view.MotionEvent arg1) { if (!testjnOverride( "onTouchEvent" )) return super.onTouchEvent( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onTouchEvent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean pageScroll(int arg1) { if (!testjnOverride( "pageScroll" )) return super.pageScroll( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "pageScroll_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean fullScroll(int arg1) { if (!testjnOverride( "fullScroll" )) return super.fullScroll( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "fullScroll_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean arrowScroll(int arg1) { if (!testjnOverride( "arrowScroll" )) return super.arrowScroll( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "arrowScroll_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected int computeHorizontalScrollRange(){ if (!testjnOverride( "computeHorizontalScrollRange" )) return super.computeHorizontalScrollRange(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeHorizontalScrollRange_" + jlocale + "_", null ); }
@Override protected void measureChild(android.view.View arg1,int arg2,int arg3) { if (!testjnOverride( "measureChild" )) { super.measureChild( arg1, arg2, arg3); return; } jInterface.Jnido( this, jchildidx + "measureChild_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected void measureChildWithMargins(android.view.View arg1,int arg2,int arg3,int arg4,int arg5) { if (!testjnOverride( "measureChildWithMargins" )) { super.measureChildWithMargins( arg1, arg2, arg3, arg4, arg5); return; } jInterface.Jnido( this, jchildidx + "measureChildWithMargins_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override public void computeScroll(){ if (!testjnOverride( "computeScroll" )) { super.computeScroll(); return; } jInterface.Jnido( this, jchildidx + "computeScroll_" + jlocale + "_", null ); }
@Override protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect arg1) { if (!testjnOverride( "computeScrollDeltaToGetChildRectOnScreen" )) return super.computeScrollDeltaToGetChildRectOnScreen( arg1); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "computeScrollDeltaToGetChildRectOnScreen_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void requestChildFocus(android.view.View arg1,android.view.View arg2) { if (!testjnOverride( "requestChildFocus" )) { super.requestChildFocus( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "requestChildFocus_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected boolean onRequestFocusInDescendants(int arg1,android.graphics.Rect arg2) { if (!testjnOverride( "onRequestFocusInDescendants" )) return super.onRequestFocusInDescendants( arg1, arg2); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onRequestFocusInDescendants_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean requestChildRectangleOnScreen(android.view.View arg1,android.graphics.Rect arg2,boolean arg3) { if (!testjnOverride( "requestChildRectangleOnScreen" )) return super.requestChildRectangleOnScreen( arg1, arg2, arg3); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "requestChildRectangleOnScreen_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override public void requestLayout(){ if (!testjnOverride( "requestLayout" )) { super.requestLayout(); return; } jInterface.Jnido( this, jchildidx + "requestLayout_" + jlocale + "_", null ); }
@Override protected void onLayout(boolean arg1,int arg2,int arg3,int arg4,int arg5) { if (!testjnOverride( "onLayout" )) { super.onLayout( arg1, arg2, arg3, arg4, arg5); return; } jInterface.Jnido( this, jchildidx + "onLayout_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4, arg5 } ); }
@Override protected void onSizeChanged(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "onSizeChanged" )) { super.onSizeChanged( arg1, arg2, arg3, arg4); return; } jInterface.Jnido( this, jchildidx + "onSizeChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override public void fling(int arg1) { if (!testjnOverride( "fling" )) { super.fling( arg1); return; } jInterface.Jnido( this, jchildidx + "fling_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void scrollTo(int arg1,int arg2) { if (!testjnOverride( "scrollTo" )) { super.scrollTo( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "scrollTo_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
}
