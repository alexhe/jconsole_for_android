package org.dykman.jn.android.widget;
public class ImageView extends android.widget.ImageView{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public ImageView(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
public ImageView(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public ImageView(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
@Override protected boolean verifyDrawable(android.graphics.drawable.Drawable arg1) { if (!testjnOverride( "verifyDrawable" )) return super.verifyDrawable( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "verifyDrawable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void invalidateDrawable(android.graphics.drawable.Drawable arg1) { if (!testjnOverride( "invalidateDrawable" )) { super.invalidateDrawable( arg1); return; } jInterface.Jnido( this, jchildidx + "invalidateDrawable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean onSetAlpha(int arg1) { if (!testjnOverride( "onSetAlpha" )) return super.onSetAlpha( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "onSetAlpha_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setAdjustViewBounds(boolean arg1) { if (!testjnOverride( "setAdjustViewBounds" )) { super.setAdjustViewBounds( arg1); return; } jInterface.Jnido( this, jchildidx + "setAdjustViewBounds_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setMaxWidth(int arg1) { if (!testjnOverride( "setMaxWidth" )) { super.setMaxWidth( arg1); return; } jInterface.Jnido( this, jchildidx + "setMaxWidth_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setMaxHeight(int arg1) { if (!testjnOverride( "setMaxHeight" )) { super.setMaxHeight( arg1); return; } jInterface.Jnido( this, jchildidx + "setMaxHeight_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.graphics.drawable.Drawable getDrawable(){ if (!testjnOverride( "getDrawable" )) return super.getDrawable(); return (android.graphics.drawable.Drawable) jInterface.Jnido( this, jchildidx + "getDrawable_" + jlocale + "_", null ); }
@Override public void setImageResource(int arg1) { if (!testjnOverride( "setImageResource" )) { super.setImageResource( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageResource_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setImageURI(android.net.Uri arg1) { if (!testjnOverride( "setImageURI" )) { super.setImageURI( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageURI_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setImageDrawable(android.graphics.drawable.Drawable arg1) { if (!testjnOverride( "setImageDrawable" )) { super.setImageDrawable( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageDrawable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setImageBitmap(android.graphics.Bitmap arg1) { if (!testjnOverride( "setImageBitmap" )) { super.setImageBitmap( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageBitmap_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setImageState(int[] arg1,boolean arg2) { if (!testjnOverride( "setImageState" )) { super.setImageState( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "setImageState_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setSelected(boolean arg1) { if (!testjnOverride( "setSelected" )) { super.setSelected( arg1); return; } jInterface.Jnido( this, jchildidx + "setSelected_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setImageLevel(int arg1) { if (!testjnOverride( "setImageLevel" )) { super.setImageLevel( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageLevel_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setScaleType(android.widget.ImageView.ScaleType arg1) { if (!testjnOverride( "setScaleType" )) { super.setScaleType( arg1); return; } jInterface.Jnido( this, jchildidx + "setScaleType_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.graphics.Matrix getImageMatrix(){ if (!testjnOverride( "getImageMatrix" )) return super.getImageMatrix(); return (android.graphics.Matrix) jInterface.Jnido( this, jchildidx + "getImageMatrix_" + jlocale + "_", null ); }
@Override public void setImageMatrix(android.graphics.Matrix arg1) { if (!testjnOverride( "setImageMatrix" )) { super.setImageMatrix( arg1); return; } jInterface.Jnido( this, jchildidx + "setImageMatrix_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int[] onCreateDrawableState(int arg1) { if (!testjnOverride( "onCreateDrawableState" )) return super.onCreateDrawableState( arg1); return (int[]) jInterface.Jnidoi( this, jchildidx + "onCreateDrawableState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onMeasure(int arg1,int arg2) { if (!testjnOverride( "onMeasure" )) { super.onMeasure( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onMeasure_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected boolean setFrame(int arg1,int arg2,int arg3,int arg4) { if (!testjnOverride( "setFrame" )) return super.setFrame( arg1, arg2, arg3, arg4); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "setFrame_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3, arg4 } ); }
@Override protected void drawableStateChanged(){ if (!testjnOverride( "drawableStateChanged" )) { super.drawableStateChanged(); return; } jInterface.Jnido( this, jchildidx + "drawableStateChanged_" + jlocale + "_", null ); }
@Override protected void onDraw(android.graphics.Canvas arg1) { if (!testjnOverride( "onDraw" )) { super.onDraw( arg1); return; } jInterface.Jnido( this, jchildidx + "onDraw_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getBaseline(){ if (!testjnOverride( "getBaseline" )) return super.getBaseline(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getBaseline_" + jlocale + "_", null ); }
@Override public void setColorFilter(android.graphics.ColorFilter arg1) { if (!testjnOverride( "setColorFilter" )) { super.setColorFilter( arg1); return; } jInterface.Jnido( this, jchildidx + "setColorFilter_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setAlpha(int arg1) { if (!testjnOverride( "setAlpha" )) { super.setAlpha( arg1); return; } jInterface.Jnido( this, jchildidx + "setAlpha_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
