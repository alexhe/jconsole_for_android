package org.dykman.jn.android.preference;
public class ListPreference extends android.preference.ListPreference{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public ListPreference(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public ListPreference(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.String getValue(){ if (!testjnOverride( "getValue" )) return super.getValue(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getValue_" + jlocale + "_", null ); }
@Override public java.lang.CharSequence getEntry(){ if (!testjnOverride( "getEntry" )) return super.getEntry(); return (java.lang.CharSequence) jInterface.Jnido( this, jchildidx + "getEntry_" + jlocale + "_", null ); }
@Override public void setValue(java.lang.String arg1) { if (!testjnOverride( "setValue" )) { super.setValue( arg1); return; } jInterface.Jnido( this, jchildidx + "setValue_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.CharSequence[] getEntries(){ if (!testjnOverride( "getEntries" )) return super.getEntries(); return (java.lang.CharSequence[]) jInterface.Jnidox( this, jchildidx + "getEntries_" + jlocale + "_", null ); }
@Override public void setEntries(java.lang.CharSequence[] arg1) { if (!testjnOverride( "setEntries" )) { super.setEntries( arg1); return; } jInterface.Jnido( this, jchildidx + "setEntries_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setEntries(int arg1) { if (!testjnOverride( "setEntries" )) { super.setEntries( arg1); return; } jInterface.Jnido( this, jchildidx + "setEntries_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setEntryValues(java.lang.CharSequence[] arg1) { if (!testjnOverride( "setEntryValues" )) { super.setEntryValues( arg1); return; } jInterface.Jnido( this, jchildidx + "setEntryValues_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setEntryValues(int arg1) { if (!testjnOverride( "setEntryValues" )) { super.setEntryValues( arg1); return; } jInterface.Jnido( this, jchildidx + "setEntryValues_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.CharSequence[] getEntryValues(){ if (!testjnOverride( "getEntryValues" )) return super.getEntryValues(); return (java.lang.CharSequence[]) jInterface.Jnidox( this, jchildidx + "getEntryValues_" + jlocale + "_", null ); }
@Override public void setValueIndex(int arg1) { if (!testjnOverride( "setValueIndex" )) { super.setValueIndex( arg1); return; } jInterface.Jnido( this, jchildidx + "setValueIndex_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int findIndexOfValue(java.lang.String arg1) { if (!testjnOverride( "findIndexOfValue" )) return super.findIndexOfValue( arg1); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "findIndexOfValue_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onPrepareDialogBuilder(android.app.AlertDialog.Builder arg1) { if (!testjnOverride( "onPrepareDialogBuilder" )) { super.onPrepareDialogBuilder( arg1); return; } jInterface.Jnido( this, jchildidx + "onPrepareDialogBuilder_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onDialogClosed(boolean arg1) { if (!testjnOverride( "onDialogClosed" )) { super.onDialogClosed( arg1); return; } jInterface.Jnido( this, jchildidx + "onDialogClosed_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected java.lang.Object onGetDefaultValue(android.content.res.TypedArray arg1,int arg2) { if (!testjnOverride( "onGetDefaultValue" )) return super.onGetDefaultValue( arg1, arg2); return (java.lang.Object) jInterface.Jnido( this, jchildidx + "onGetDefaultValue_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected void onSetInitialValue(boolean arg1,java.lang.Object arg2) { if (!testjnOverride( "onSetInitialValue" )) { super.onSetInitialValue( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onSetInitialValue_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected android.os.Parcelable onSaveInstanceState(){ if (!testjnOverride( "onSaveInstanceState" )) return super.onSaveInstanceState(); return (android.os.Parcelable) jInterface.Jnido( this, jchildidx + "onSaveInstanceState_" + jlocale + "_", null ); }
@Override protected void onRestoreInstanceState(android.os.Parcelable arg1) { if (!testjnOverride( "onRestoreInstanceState" )) { super.onRestoreInstanceState( arg1); return; } jInterface.Jnido( this, jchildidx + "onRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
