package org.dykman.jn.android.preference;
public class Preference extends android.preference.Preference{
protected org.dykman.j.JInterface jInterface = null;
protected java.lang.String jlocale = null;
protected java.lang.String jchildid = null;
protected java.lang.String jchildidx = null;
protected java.util.ArrayList jnOverrideList = null;
protected void jparseargs (java.lang.String jlocale, java.lang.String jchildid, java.lang.String joverride ) { this.jlocale = jlocale; this.jchildid = jchildid; if (jchildid != null && jchildid.length() > 0) jchildidx = jchildid + "_"; else jchildidx = ""; if (joverride != null && joverride.length() > 0) { java.lang.String[] ss = joverride.split(" "); for (int i = 0; i < ss.length; i++) setjnOverride(ss[i]); } }
public void clearjnOverride () { jnOverrideList.clear (); }
public void setjnOverride (java.lang.String arg1 ) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); }
public void setjnOverride (java.lang.String arg1, boolean arg2 ) { if (arg2) { if (!testjnOverride (arg1)) jnOverrideList.add (arg1); } else jnOverrideList.remove (arg1); }
public boolean testjnOverride (java.lang.String arg1 ) { return jnOverrideList.contains (arg1); }
public Preference(android.content.Context arg1,android.util.AttributeSet arg2,int arg3, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2, arg3); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2, arg3 } ); }
public Preference(android.content.Context arg1,android.util.AttributeSet arg2, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1, arg2); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
public Preference(android.content.Context arg1, java.lang.String jlocale,String jchildid,String joverride ) { super( arg1); jnOverrideList = new java.util.ArrayList(); jparseargs( jlocale, jchildid, joverride ); jInterface = org.dykman.j.android.JConsoleApp.theApp.jInterface; if (testjnOverride( "jcreate" )) jInterface.Jnido( this, jchildidx + "jcreate_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.String toString(){ if (!testjnOverride( "toString" )) return super.toString(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "toString_" + jlocale + "_", null ); }
@Override public java.lang.String getKey(){ if (!testjnOverride( "getKey" )) return super.getKey(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getKey_" + jlocale + "_", null ); }
@Override public android.content.Context getContext(){ if (!testjnOverride( "getContext" )) return super.getContext(); return (android.content.Context) jInterface.Jnido( this, jchildidx + "getContext_" + jlocale + "_", null ); }
@Override protected java.lang.Object onGetDefaultValue(android.content.res.TypedArray arg1,int arg2) { if (!testjnOverride( "onGetDefaultValue" )) return super.onGetDefaultValue( arg1, arg2); return (java.lang.Object) jInterface.Jnido( this, jchildidx + "onGetDefaultValue_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public void setIntent(android.content.Intent arg1) { if (!testjnOverride( "setIntent" )) { super.setIntent( arg1); return; } jInterface.Jnido( this, jchildidx + "setIntent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.content.Intent getIntent(){ if (!testjnOverride( "getIntent" )) return super.getIntent(); return (android.content.Intent) jInterface.Jnido( this, jchildidx + "getIntent_" + jlocale + "_", null ); }
@Override public void setLayoutResource(int arg1) { if (!testjnOverride( "setLayoutResource" )) { super.setLayoutResource( arg1); return; } jInterface.Jnido( this, jchildidx + "setLayoutResource_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getLayoutResource(){ if (!testjnOverride( "getLayoutResource" )) return super.getLayoutResource(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getLayoutResource_" + jlocale + "_", null ); }
@Override public void setWidgetLayoutResource(int arg1) { if (!testjnOverride( "setWidgetLayoutResource" )) { super.setWidgetLayoutResource( arg1); return; } jInterface.Jnido( this, jchildidx + "setWidgetLayoutResource_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getWidgetLayoutResource(){ if (!testjnOverride( "getWidgetLayoutResource" )) return super.getWidgetLayoutResource(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getWidgetLayoutResource_" + jlocale + "_", null ); }
@Override public android.view.View getView(android.view.View arg1,android.view.ViewGroup arg2) { if (!testjnOverride( "getView" )) return super.getView( arg1, arg2); return (android.view.View) jInterface.Jnido( this, jchildidx + "getView_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected android.view.View onCreateView(android.view.ViewGroup arg1) { if (!testjnOverride( "onCreateView" )) return super.onCreateView( arg1); return (android.view.View) jInterface.Jnido( this, jchildidx + "onCreateView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onBindView(android.view.View arg1) { if (!testjnOverride( "onBindView" )) { super.onBindView( arg1); return; } jInterface.Jnido( this, jchildidx + "onBindView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setOrder(int arg1) { if (!testjnOverride( "setOrder" )) { super.setOrder( arg1); return; } jInterface.Jnido( this, jchildidx + "setOrder_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public int getOrder(){ if (!testjnOverride( "getOrder" )) return super.getOrder(); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getOrder_" + jlocale + "_", null ); }
@Override public void setTitle(java.lang.CharSequence arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, jchildidx + "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setTitle(int arg1) { if (!testjnOverride( "setTitle" )) { super.setTitle( arg1); return; } jInterface.Jnido( this, jchildidx + "setTitle_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.CharSequence getTitle(){ if (!testjnOverride( "getTitle" )) return super.getTitle(); return (java.lang.CharSequence) jInterface.Jnido( this, jchildidx + "getTitle_" + jlocale + "_", null ); }
@Override public java.lang.CharSequence getSummary(){ if (!testjnOverride( "getSummary" )) return super.getSummary(); return (java.lang.CharSequence) jInterface.Jnido( this, jchildidx + "getSummary_" + jlocale + "_", null ); }
@Override public void setSummary(java.lang.CharSequence arg1) { if (!testjnOverride( "setSummary" )) { super.setSummary( arg1); return; } jInterface.Jnido( this, jchildidx + "setSummary_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setSummary(int arg1) { if (!testjnOverride( "setSummary" )) { super.setSummary( arg1); return; } jInterface.Jnido( this, jchildidx + "setSummary_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setEnabled(boolean arg1) { if (!testjnOverride( "setEnabled" )) { super.setEnabled( arg1); return; } jInterface.Jnido( this, jchildidx + "setEnabled_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isEnabled(){ if (!testjnOverride( "isEnabled" )) return super.isEnabled(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isEnabled_" + jlocale + "_", null ); }
@Override public void setSelectable(boolean arg1) { if (!testjnOverride( "setSelectable" )) { super.setSelectable( arg1); return; } jInterface.Jnido( this, jchildidx + "setSelectable_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean isSelectable(){ if (!testjnOverride( "isSelectable" )) return super.isSelectable(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isSelectable_" + jlocale + "_", null ); }
@Override public void setShouldDisableView(boolean arg1) { if (!testjnOverride( "setShouldDisableView" )) { super.setShouldDisableView( arg1); return; } jInterface.Jnido( this, jchildidx + "setShouldDisableView_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean getShouldDisableView(){ if (!testjnOverride( "getShouldDisableView" )) return super.getShouldDisableView(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "getShouldDisableView_" + jlocale + "_", null ); }
@Override protected void onClick(){ if (!testjnOverride( "onClick" )) { super.onClick(); return; } jInterface.Jnido( this, jchildidx + "onClick_" + jlocale + "_", null ); }
@Override public void setKey(java.lang.String arg1) { if (!testjnOverride( "setKey" )) { super.setKey( arg1); return; } jInterface.Jnido( this, jchildidx + "setKey_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public boolean hasKey(){ if (!testjnOverride( "hasKey" )) return super.hasKey(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "hasKey_" + jlocale + "_", null ); }
@Override public boolean isPersistent(){ if (!testjnOverride( "isPersistent" )) return super.isPersistent(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "isPersistent_" + jlocale + "_", null ); }
@Override protected boolean shouldPersist(){ if (!testjnOverride( "shouldPersist" )) return super.shouldPersist(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "shouldPersist_" + jlocale + "_", null ); }
@Override public void setPersistent(boolean arg1) { if (!testjnOverride( "setPersistent" )) { super.setPersistent( arg1); return; } jInterface.Jnido( this, jchildidx + "setPersistent_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean callChangeListener(java.lang.Object arg1) { if (!testjnOverride( "callChangeListener" )) return super.callChangeListener( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "callChangeListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener arg1) { if (!testjnOverride( "setOnPreferenceChangeListener" )) { super.setOnPreferenceChangeListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnPreferenceChangeListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener arg1) { if (!testjnOverride( "setOnPreferenceClickListener" )) { super.setOnPreferenceClickListener( arg1); return; } jInterface.Jnido( this, jchildidx + "setOnPreferenceClickListener_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public android.content.SharedPreferences getSharedPreferences(){ if (!testjnOverride( "getSharedPreferences" )) return super.getSharedPreferences(); return (android.content.SharedPreferences) jInterface.Jnido( this, jchildidx + "getSharedPreferences_" + jlocale + "_", null ); }
@Override public boolean shouldCommit(){ if (!testjnOverride( "shouldCommit" )) return super.shouldCommit(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "shouldCommit_" + jlocale + "_", null ); }
@Override protected void notifyChanged(){ if (!testjnOverride( "notifyChanged" )) { super.notifyChanged(); return; } jInterface.Jnido( this, jchildidx + "notifyChanged_" + jlocale + "_", null ); }
@Override protected void notifyHierarchyChanged(){ if (!testjnOverride( "notifyHierarchyChanged" )) { super.notifyHierarchyChanged(); return; } jInterface.Jnido( this, jchildidx + "notifyHierarchyChanged_" + jlocale + "_", null ); }
@Override public android.preference.PreferenceManager getPreferenceManager(){ if (!testjnOverride( "getPreferenceManager" )) return super.getPreferenceManager(); return (android.preference.PreferenceManager) jInterface.Jnido( this, jchildidx + "getPreferenceManager_" + jlocale + "_", null ); }
@Override protected void onAttachedToHierarchy(android.preference.PreferenceManager arg1) { if (!testjnOverride( "onAttachedToHierarchy" )) { super.onAttachedToHierarchy( arg1); return; } jInterface.Jnido( this, jchildidx + "onAttachedToHierarchy_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onAttachedToActivity(){ if (!testjnOverride( "onAttachedToActivity" )) { super.onAttachedToActivity(); return; } jInterface.Jnido( this, jchildidx + "onAttachedToActivity_" + jlocale + "_", null ); }
@Override protected android.preference.Preference findPreferenceInHierarchy(java.lang.String arg1) { if (!testjnOverride( "findPreferenceInHierarchy" )) return super.findPreferenceInHierarchy( arg1); return (android.preference.Preference) jInterface.Jnido( this, jchildidx + "findPreferenceInHierarchy_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void notifyDependencyChange(boolean arg1) { if (!testjnOverride( "notifyDependencyChange" )) { super.notifyDependencyChange( arg1); return; } jInterface.Jnido( this, jchildidx + "notifyDependencyChange_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void onDependencyChanged(android.preference.Preference arg1,boolean arg2) { if (!testjnOverride( "onDependencyChanged" )) { super.onDependencyChanged( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onDependencyChanged_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override public boolean shouldDisableDependents(){ if (!testjnOverride( "shouldDisableDependents" )) return super.shouldDisableDependents(); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "shouldDisableDependents_" + jlocale + "_", null ); }
@Override public void setDependency(java.lang.String arg1) { if (!testjnOverride( "setDependency" )) { super.setDependency( arg1); return; } jInterface.Jnido( this, jchildidx + "setDependency_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public java.lang.String getDependency(){ if (!testjnOverride( "getDependency" )) return super.getDependency(); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getDependency_" + jlocale + "_", null ); }
@Override protected void onPrepareForRemoval(){ if (!testjnOverride( "onPrepareForRemoval" )) { super.onPrepareForRemoval(); return; } jInterface.Jnido( this, jchildidx + "onPrepareForRemoval_" + jlocale + "_", null ); }
@Override public void setDefaultValue(java.lang.Object arg1) { if (!testjnOverride( "setDefaultValue" )) { super.setDefaultValue( arg1); return; } jInterface.Jnido( this, jchildidx + "setDefaultValue_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onSetInitialValue(boolean arg1,java.lang.Object arg2) { if (!testjnOverride( "onSetInitialValue" )) { super.onSetInitialValue( arg1, arg2); return; } jInterface.Jnido( this, jchildidx + "onSetInitialValue_" + jlocale + "_", new java.lang.Object[]{ arg1, arg2 } ); }
@Override protected boolean persistString(java.lang.String arg1) { if (!testjnOverride( "persistString" )) return super.persistString( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "persistString_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected java.lang.String getPersistedString(java.lang.String arg1) { if (!testjnOverride( "getPersistedString" )) return super.getPersistedString( arg1); return (java.lang.String) jInterface.Jnido( this, jchildidx + "getPersistedString_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean persistInt(int arg1) { if (!testjnOverride( "persistInt" )) return super.persistInt( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "persistInt_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected int getPersistedInt(int arg1) { if (!testjnOverride( "getPersistedInt" )) return super.getPersistedInt( arg1); return (java.lang.Integer) jInterface.Jnido( this, jchildidx + "getPersistedInt_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean persistFloat(float arg1) { if (!testjnOverride( "persistFloat" )) return super.persistFloat( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "persistFloat_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected float getPersistedFloat(float arg1) { if (!testjnOverride( "getPersistedFloat" )) return super.getPersistedFloat( arg1); return (java.lang.Float) jInterface.Jnido( this, jchildidx + "getPersistedFloat_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean persistLong(long arg1) { if (!testjnOverride( "persistLong" )) return super.persistLong( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "persistLong_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected long getPersistedLong(long arg1) { if (!testjnOverride( "getPersistedLong" )) return super.getPersistedLong( arg1); return (java.lang.Long) jInterface.Jnido( this, jchildidx + "getPersistedLong_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean persistBoolean(boolean arg1) { if (!testjnOverride( "persistBoolean" )) return super.persistBoolean( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "persistBoolean_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected boolean getPersistedBoolean(boolean arg1) { if (!testjnOverride( "getPersistedBoolean" )) return super.getPersistedBoolean( arg1); return (java.lang.Boolean) jInterface.Jnido( this, jchildidx + "getPersistedBoolean_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override public void saveHierarchyState(android.os.Bundle arg1) { if (!testjnOverride( "saveHierarchyState" )) { super.saveHierarchyState( arg1); return; } jInterface.Jnido( this, jchildidx + "saveHierarchyState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected android.os.Parcelable onSaveInstanceState(){ if (!testjnOverride( "onSaveInstanceState" )) return super.onSaveInstanceState(); return (android.os.Parcelable) jInterface.Jnido( this, jchildidx + "onSaveInstanceState_" + jlocale + "_", null ); }
@Override public void restoreHierarchyState(android.os.Bundle arg1) { if (!testjnOverride( "restoreHierarchyState" )) { super.restoreHierarchyState( arg1); return; } jInterface.Jnido( this, jchildidx + "restoreHierarchyState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
@Override protected void onRestoreInstanceState(android.os.Parcelable arg1) { if (!testjnOverride( "onRestoreInstanceState" )) { super.onRestoreInstanceState( arg1); return; } jInterface.Jnido( this, jchildidx + "onRestoreInstanceState_" + jlocale + "_", new java.lang.Object[]{ arg1 } ); }
}
